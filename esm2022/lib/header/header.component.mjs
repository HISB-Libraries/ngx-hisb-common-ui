import { Component, Input } from '@angular/core';
import { MatButtonModule } from "@angular/material/button";
import { MatToolbarModule } from "@angular/material/toolbar";
import { MatIconModule } from "@angular/material/icon";
import { MatMenuModule } from "@angular/material/menu";
import { RouterLink } from "@angular/router";
import { MatDividerModule } from "@angular/material/divider";
import { BrowserModule } from "@angular/platform-browser";
import * as i0 from "@angular/core";
import * as i1 from "@angular/material/button";
import * as i2 from "@angular/material/toolbar";
import * as i3 from "@angular/material/icon";
import * as i4 from "@angular/material/menu";
import * as i5 from "@angular/material/divider";
export class HeaderComponent {
    constructor() {
        this.title = "";
        this.version = "";
        this.subtitle = "";
        this.splitSubtitleEvenly = false;
        this.showUserManagement = false;
        this.backgroundColor = "#646064";
        this.subtitleInsert = undefined;
    }
    ngOnInit() {
        if (this.splitSubtitleEvenly) {
            this.subtitleInsert = this.splitSubtitle(this.subtitle);
        }
        else {
            this.subtitleInsert = this.subtitle;
        }
    }
    splitSubtitle(subtitle) {
        const subtitleWordList = subtitle.split(" ");
        const halfLength = Math.floor(subtitleWordList.length / 2);
        let recombinedSubtitle = "";
        subtitleWordList.map((word, i) => {
            recombinedSubtitle += word + " ";
            if (i == halfLength) {
                recombinedSubtitle += "<br>";
            }
        });
        return recombinedSubtitle;
    }
    openLink(link) {
        if (link)
            window.open(link, '_blank');
    }
    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "18.0.0", ngImport: i0, type: HeaderComponent, deps: [], target: i0.ɵɵFactoryTarget.Component }); }
    static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "17.0.0", version: "18.0.0", type: HeaderComponent, isStandalone: true, selector: "common-header", inputs: { configuration: "configuration", title: "title", version: "version", subtitle: "subtitle", splitSubtitleEvenly: "splitSubtitleEvenly", showUserManagement: "showUserManagement", backgroundColor: "backgroundColor" }, ngImport: i0, template: "<mat-toolbar class=\"header\">\n\n  <mat-toolbar-row [style.background-color]=\"backgroundColor\">\n    <div class=\"title\" [routerLink]=\"'/'\" [style.cursor]=\"'pointer'\">{{ title }}</div>\n\n    <div class=\"subtitle\">\n      <p [innerHTML]=\"subtitleInsert\">\n      </p>\n    </div>\n\n    <div class=\"content-spacer\"></div>\n    @if (version) {\n      <div class=\"version-label\">\n        Version: {{ version }}\n      </div>\n    }\n    @if (configuration?.menuItem) {\n      <div>\n        <button mat-icon-button [matMenuTriggerFor]=\"menu\" aria-label=\"Menu\">\n          <mat-icon>more_vert</mat-icon>\n        </button>\n      </div>\n    }\n    <div>\n      @if (showUserManagement) {\n        <button mat-icon-button aria-label=\"User Management\">\n          <mat-icon>account_circle</mat-icon>\n        </button>\n      }\n    </div>\n  </mat-toolbar-row>\n\n  <mat-menu #menu=\"matMenu\">\n    @for (item of configuration?.menuItem; track item) {\n\n      @if (item.divider) {\n        <mat-divider></mat-divider>\n      }\n      @if (!item.divider) {\n        <button mat-menu-item (click)=\"openLink(item.link)\">\n          <span>{{ item.label }}</span>\n        </button>\n      }\n\n    }\n  </mat-menu>\n</mat-toolbar>\n\n\n\n<!--&lt;!&ndash; Add links to major features as they are implemented here. &ndash;&gt;-->\n\n\n\n\n<!--<mat-menu #menu=\"matMenu\">-->\n<!--  <button mat-menu-item onclick=\"window.open('https://ravendocs.readthedocs.io/en/latest/','_blank')\">-->\n<!--    <span>Documentation</span>-->\n<!--  </button>-->\n<!--  <button mat-menu-item onclick=\"window.open('https://github.com/MortalityReporting','_blank')\">-->\n<!--    <span>Mortality Reporting GitHub</span>-->\n<!--  </button>-->\n<!--  <mat-divider></mat-divider>-->\n<!--  <button mat-menu-item onclick=\"window.open('https://chat.fhir.org','_blank')\">-->\n<!--    <span>FHIR Zulip Chat</span>-->\n<!--  </button>-->\n<!--</mat-menu>-->\n\n", styles: [".title{margin-left:10px}.subtitle{margin-left:30px;font-size:small;width:600px;white-space:normal}.subtitle p{overflow-wrap:break-word;line-height:normal;margin:0}.version-label{font-weight:700;font-size:small;margin:5px}.content-spacer{flex:1 1 auto}.header{background-color:indigo;color:#fff}\n"], dependencies: [{ kind: "ngmodule", type: MatButtonModule }, { kind: "component", type: i1.MatIconButton, selector: "button[mat-icon-button]", exportAs: ["matButton"] }, { kind: "ngmodule", type: MatToolbarModule }, { kind: "component", type: i2.MatToolbar, selector: "mat-toolbar", inputs: ["color"], exportAs: ["matToolbar"] }, { kind: "directive", type: i2.MatToolbarRow, selector: "mat-toolbar-row", exportAs: ["matToolbarRow"] }, { kind: "ngmodule", type: MatIconModule }, { kind: "component", type: i3.MatIcon, selector: "mat-icon", inputs: ["color", "inline", "svgIcon", "fontSet", "fontIcon"], exportAs: ["matIcon"] }, { kind: "ngmodule", type: MatMenuModule }, { kind: "component", type: i4.MatMenu, selector: "mat-menu", inputs: ["backdropClass", "aria-label", "aria-labelledby", "aria-describedby", "xPosition", "yPosition", "overlapTrigger", "hasBackdrop", "class", "classList"], outputs: ["closed", "close"], exportAs: ["matMenu"] }, { kind: "component", type: i4.MatMenuItem, selector: "[mat-menu-item]", inputs: ["role", "disabled", "disableRipple"], exportAs: ["matMenuItem"] }, { kind: "directive", type: i4.MatMenuTrigger, selector: "[mat-menu-trigger-for], [matMenuTriggerFor]", inputs: ["mat-menu-trigger-for", "matMenuTriggerFor", "matMenuTriggerData", "matMenuTriggerRestoreFocus"], outputs: ["menuOpened", "onMenuOpen", "menuClosed", "onMenuClose"], exportAs: ["matMenuTrigger"] }, { kind: "directive", type: RouterLink, selector: "[routerLink]", inputs: ["target", "queryParams", "fragment", "queryParamsHandling", "state", "info", "relativeTo", "preserveFragment", "skipLocationChange", "replaceUrl", "routerLink"] }, { kind: "ngmodule", type: MatDividerModule }, { kind: "component", type: i5.MatDivider, selector: "mat-divider", inputs: ["vertical", "inset"] }, { kind: "ngmodule", type: BrowserModule }] }); }
}
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "18.0.0", ngImport: i0, type: HeaderComponent, decorators: [{
            type: Component,
            args: [{ standalone: true, imports: [
                        MatButtonModule,
                        MatToolbarModule,
                        MatIconModule,
                        MatMenuModule,
                        RouterLink,
                        MatDividerModule,
                        BrowserModule
                    ], selector: 'common-header', template: "<mat-toolbar class=\"header\">\n\n  <mat-toolbar-row [style.background-color]=\"backgroundColor\">\n    <div class=\"title\" [routerLink]=\"'/'\" [style.cursor]=\"'pointer'\">{{ title }}</div>\n\n    <div class=\"subtitle\">\n      <p [innerHTML]=\"subtitleInsert\">\n      </p>\n    </div>\n\n    <div class=\"content-spacer\"></div>\n    @if (version) {\n      <div class=\"version-label\">\n        Version: {{ version }}\n      </div>\n    }\n    @if (configuration?.menuItem) {\n      <div>\n        <button mat-icon-button [matMenuTriggerFor]=\"menu\" aria-label=\"Menu\">\n          <mat-icon>more_vert</mat-icon>\n        </button>\n      </div>\n    }\n    <div>\n      @if (showUserManagement) {\n        <button mat-icon-button aria-label=\"User Management\">\n          <mat-icon>account_circle</mat-icon>\n        </button>\n      }\n    </div>\n  </mat-toolbar-row>\n\n  <mat-menu #menu=\"matMenu\">\n    @for (item of configuration?.menuItem; track item) {\n\n      @if (item.divider) {\n        <mat-divider></mat-divider>\n      }\n      @if (!item.divider) {\n        <button mat-menu-item (click)=\"openLink(item.link)\">\n          <span>{{ item.label }}</span>\n        </button>\n      }\n\n    }\n  </mat-menu>\n</mat-toolbar>\n\n\n\n<!--&lt;!&ndash; Add links to major features as they are implemented here. &ndash;&gt;-->\n\n\n\n\n<!--<mat-menu #menu=\"matMenu\">-->\n<!--  <button mat-menu-item onclick=\"window.open('https://ravendocs.readthedocs.io/en/latest/','_blank')\">-->\n<!--    <span>Documentation</span>-->\n<!--  </button>-->\n<!--  <button mat-menu-item onclick=\"window.open('https://github.com/MortalityReporting','_blank')\">-->\n<!--    <span>Mortality Reporting GitHub</span>-->\n<!--  </button>-->\n<!--  <mat-divider></mat-divider>-->\n<!--  <button mat-menu-item onclick=\"window.open('https://chat.fhir.org','_blank')\">-->\n<!--    <span>FHIR Zulip Chat</span>-->\n<!--  </button>-->\n<!--</mat-menu>-->\n\n", styles: [".title{margin-left:10px}.subtitle{margin-left:30px;font-size:small;width:600px;white-space:normal}.subtitle p{overflow-wrap:break-word;line-height:normal;margin:0}.version-label{font-weight:700;font-size:small;margin:5px}.content-spacer{flex:1 1 auto}.header{background-color:indigo;color:#fff}\n"] }]
        }], ctorParameters: () => [], propDecorators: { configuration: [{
                type: Input
            }], title: [{
                type: Input
            }], version: [{
                type: Input
            }], subtitle: [{
                type: Input
            }], splitSubtitleEvenly: [{
                type: Input
            }], showUserManagement: [{
                type: Input
            }], backgroundColor: [{
                type: Input
            }] } });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaGVhZGVyLmNvbXBvbmVudC5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uLy4uL3Byb2plY3RzL25neC1oaXNiLWNvbW1vbi11aS9zcmMvbGliL2hlYWRlci9oZWFkZXIuY29tcG9uZW50LnRzIiwiLi4vLi4vLi4vLi4vLi4vcHJvamVjdHMvbmd4LWhpc2ItY29tbW9uLXVpL3NyYy9saWIvaGVhZGVyL2hlYWRlci5jb21wb25lbnQuaHRtbCJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxPQUFPLEVBQUMsU0FBUyxFQUFFLEtBQUssRUFBUyxNQUFNLGVBQWUsQ0FBQztBQUV2RCxPQUFPLEVBQUMsZUFBZSxFQUFDLE1BQU0sMEJBQTBCLENBQUM7QUFDekQsT0FBTyxFQUFDLGdCQUFnQixFQUFDLE1BQU0sMkJBQTJCLENBQUM7QUFDM0QsT0FBTyxFQUFDLGFBQWEsRUFBQyxNQUFNLHdCQUF3QixDQUFDO0FBRXJELE9BQU8sRUFBQyxhQUFhLEVBQUMsTUFBTSx3QkFBd0IsQ0FBQztBQUNyRCxPQUFPLEVBQUMsVUFBVSxFQUFDLE1BQU0saUJBQWlCLENBQUM7QUFDM0MsT0FBTyxFQUFDLGdCQUFnQixFQUFDLE1BQU0sMkJBQTJCLENBQUM7QUFDM0QsT0FBTyxFQUFDLGFBQWEsRUFBQyxNQUFNLDJCQUEyQixDQUFDOzs7Ozs7O0FBaUJ4RCxNQUFNLE9BQU8sZUFBZTtJQVUxQjtRQVJTLFVBQUssR0FBVyxFQUFFLENBQUM7UUFDbkIsWUFBTyxHQUFXLEVBQUUsQ0FBQztRQUNyQixhQUFRLEdBQVcsRUFBRSxDQUFDO1FBQ3RCLHdCQUFtQixHQUFZLEtBQUssQ0FBQztRQUNyQyx1QkFBa0IsR0FBWSxLQUFLLENBQUM7UUFDcEMsb0JBQWUsR0FBVyxTQUFTLENBQUM7UUFDN0MsbUJBQWMsR0FBUSxTQUFTLENBQUM7SUFFakIsQ0FBQztJQUVoQixRQUFRO1FBQ04sSUFBSSxJQUFJLENBQUMsbUJBQW1CLEVBQUUsQ0FBQztZQUM3QixJQUFJLENBQUMsY0FBYyxHQUFHLElBQUksQ0FBQyxhQUFhLENBQUMsSUFBSSxDQUFDLFFBQVEsQ0FBQyxDQUFDO1FBQzFELENBQUM7YUFDSSxDQUFDO1lBQ0osSUFBSSxDQUFDLGNBQWMsR0FBRyxJQUFJLENBQUMsUUFBUSxDQUFDO1FBQ3RDLENBQUM7SUFDSCxDQUFDO0lBRU8sYUFBYSxDQUFDLFFBQWdCO1FBQ3BDLE1BQU0sZ0JBQWdCLEdBQUcsUUFBUSxDQUFDLEtBQUssQ0FBQyxHQUFHLENBQUMsQ0FBQztRQUM3QyxNQUFNLFVBQVUsR0FBRyxJQUFJLENBQUMsS0FBSyxDQUFDLGdCQUFnQixDQUFDLE1BQU0sR0FBRyxDQUFDLENBQUMsQ0FBQztRQUMzRCxJQUFJLGtCQUFrQixHQUFHLEVBQUUsQ0FBQztRQUM1QixnQkFBZ0IsQ0FBQyxHQUFHLENBQUMsQ0FBQyxJQUFJLEVBQUUsQ0FBQyxFQUFFLEVBQUU7WUFDL0Isa0JBQWtCLElBQUksSUFBSSxHQUFHLEdBQUcsQ0FBQztZQUNqQyxJQUFJLENBQUMsSUFBSSxVQUFVLEVBQUUsQ0FBQztnQkFDcEIsa0JBQWtCLElBQUksTUFBTSxDQUFDO1lBQy9CLENBQUM7UUFDSCxDQUFDLENBQUMsQ0FBQztRQUNILE9BQU8sa0JBQWtCLENBQUE7SUFDM0IsQ0FBQztJQUVELFFBQVEsQ0FBQyxJQUF3QjtRQUMvQixJQUFJLElBQUk7WUFBRSxNQUFNLENBQUMsSUFBSSxDQUFDLElBQUksRUFBQyxRQUFRLENBQUMsQ0FBQztJQUN2QyxDQUFDOzhHQXBDVSxlQUFlO2tHQUFmLGVBQWUseVNDMUI1QixzNkRBb0VBLGlXRHRESSxlQUFlLDJJQUNmLGdCQUFnQix5UEFDaEIsYUFBYSxtTEFDYixhQUFhLDh2QkFDYixVQUFVLG1PQUNWLGdCQUFnQixrSUFDaEIsYUFBYTs7MkZBTUosZUFBZTtrQkFmM0IsU0FBUztpQ0FDSSxJQUFJLFdBQ1A7d0JBQ1AsZUFBZTt3QkFDZixnQkFBZ0I7d0JBQ2hCLGFBQWE7d0JBQ2IsYUFBYTt3QkFDYixVQUFVO3dCQUNWLGdCQUFnQjt3QkFDaEIsYUFBYTtxQkFDaEIsWUFDVyxlQUFlO3dEQUtoQixhQUFhO3NCQUFyQixLQUFLO2dCQUNHLEtBQUs7c0JBQWIsS0FBSztnQkFDRyxPQUFPO3NCQUFmLEtBQUs7Z0JBQ0csUUFBUTtzQkFBaEIsS0FBSztnQkFDRyxtQkFBbUI7c0JBQTNCLEtBQUs7Z0JBQ0csa0JBQWtCO3NCQUExQixLQUFLO2dCQUNHLGVBQWU7c0JBQXZCLEtBQUsiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQge0NvbXBvbmVudCwgSW5wdXQsIE9uSW5pdH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5pbXBvcnQge0hlYWRlckNvbmZpZ30gZnJvbSBcIi4vaGVhZGVyLmNvbmZpZ1wiO1xuaW1wb3J0IHtNYXRCdXR0b25Nb2R1bGV9IGZyb20gXCJAYW5ndWxhci9tYXRlcmlhbC9idXR0b25cIjtcbmltcG9ydCB7TWF0VG9vbGJhck1vZHVsZX0gZnJvbSBcIkBhbmd1bGFyL21hdGVyaWFsL3Rvb2xiYXJcIjtcbmltcG9ydCB7TWF0SWNvbk1vZHVsZX0gZnJvbSBcIkBhbmd1bGFyL21hdGVyaWFsL2ljb25cIjtcblxuaW1wb3J0IHtNYXRNZW51TW9kdWxlfSBmcm9tIFwiQGFuZ3VsYXIvbWF0ZXJpYWwvbWVudVwiO1xuaW1wb3J0IHtSb3V0ZXJMaW5rfSBmcm9tIFwiQGFuZ3VsYXIvcm91dGVyXCI7XG5pbXBvcnQge01hdERpdmlkZXJNb2R1bGV9IGZyb20gXCJAYW5ndWxhci9tYXRlcmlhbC9kaXZpZGVyXCI7XG5pbXBvcnQge0Jyb3dzZXJNb2R1bGV9IGZyb20gXCJAYW5ndWxhci9wbGF0Zm9ybS1icm93c2VyXCI7XG5cbkBDb21wb25lbnQoe1xuICBzdGFuZGFsb25lOiB0cnVlLFxuICBpbXBvcnRzOiBbXG4gICAgTWF0QnV0dG9uTW9kdWxlLFxuICAgIE1hdFRvb2xiYXJNb2R1bGUsXG4gICAgTWF0SWNvbk1vZHVsZSxcbiAgICBNYXRNZW51TW9kdWxlLFxuICAgIFJvdXRlckxpbmssXG4gICAgTWF0RGl2aWRlck1vZHVsZSxcbiAgICBCcm93c2VyTW9kdWxlXG5dLFxuICBzZWxlY3RvcjogJ2NvbW1vbi1oZWFkZXInLFxuICBzdHlsZVVybHM6IFsnLi9oZWFkZXIuY29tcG9uZW50LmNzcyddLFxuICB0ZW1wbGF0ZVVybDogJ2hlYWRlci5jb21wb25lbnQuaHRtbCdcbn0pXG5leHBvcnQgY2xhc3MgSGVhZGVyQ29tcG9uZW50IGltcGxlbWVudHMgT25Jbml0IHtcbiAgQElucHV0KCkgY29uZmlndXJhdGlvbjogSGVhZGVyQ29uZmlnIHwgdW5kZWZpbmVkO1xuICBASW5wdXQoKSB0aXRsZTogc3RyaW5nID0gXCJcIjtcbiAgQElucHV0KCkgdmVyc2lvbjogc3RyaW5nID0gXCJcIjtcbiAgQElucHV0KCkgc3VidGl0bGU6IHN0cmluZyA9IFwiXCI7XG4gIEBJbnB1dCgpIHNwbGl0U3VidGl0bGVFdmVubHk6IGJvb2xlYW4gPSBmYWxzZTtcbiAgQElucHV0KCkgc2hvd1VzZXJNYW5hZ2VtZW50OiBib29sZWFuID0gZmFsc2U7XG4gIEBJbnB1dCgpIGJhY2tncm91bmRDb2xvcjogc3RyaW5nID0gXCIjNjQ2MDY0XCI7XG4gIHN1YnRpdGxlSW5zZXJ0OiBhbnkgPSB1bmRlZmluZWQ7XG5cbiAgY29uc3RydWN0b3IoKSB7fVxuXG4gIG5nT25Jbml0KCk6IHZvaWQge1xuICAgIGlmICh0aGlzLnNwbGl0U3VidGl0bGVFdmVubHkpIHtcbiAgICAgIHRoaXMuc3VidGl0bGVJbnNlcnQgPSB0aGlzLnNwbGl0U3VidGl0bGUodGhpcy5zdWJ0aXRsZSk7XG4gICAgfVxuICAgIGVsc2Uge1xuICAgICAgdGhpcy5zdWJ0aXRsZUluc2VydCA9IHRoaXMuc3VidGl0bGU7XG4gICAgfVxuICB9XG5cbiAgcHJpdmF0ZSBzcGxpdFN1YnRpdGxlKHN1YnRpdGxlOiBzdHJpbmcpOiBzdHJpbmcge1xuICAgIGNvbnN0IHN1YnRpdGxlV29yZExpc3QgPSBzdWJ0aXRsZS5zcGxpdChcIiBcIik7XG4gICAgY29uc3QgaGFsZkxlbmd0aCA9IE1hdGguZmxvb3Ioc3VidGl0bGVXb3JkTGlzdC5sZW5ndGggLyAyKTtcbiAgICBsZXQgcmVjb21iaW5lZFN1YnRpdGxlID0gXCJcIjtcbiAgICBzdWJ0aXRsZVdvcmRMaXN0Lm1hcCgod29yZCwgaSkgPT4ge1xuICAgICAgcmVjb21iaW5lZFN1YnRpdGxlICs9IHdvcmQgKyBcIiBcIjtcbiAgICAgIGlmIChpID09IGhhbGZMZW5ndGgpIHtcbiAgICAgICAgcmVjb21iaW5lZFN1YnRpdGxlICs9IFwiPGJyPlwiO1xuICAgICAgfVxuICAgIH0pO1xuICAgIHJldHVybiByZWNvbWJpbmVkU3VidGl0bGVcbiAgfVxuXG4gIG9wZW5MaW5rKGxpbms6IHN0cmluZyB8IHVuZGVmaW5lZCkge1xuICAgIGlmIChsaW5rKSB3aW5kb3cub3BlbihsaW5rLCdfYmxhbmsnKTtcbiAgfVxufVxuIiwiPG1hdC10b29sYmFyIGNsYXNzPVwiaGVhZGVyXCI+XG5cbiAgPG1hdC10b29sYmFyLXJvdyBbc3R5bGUuYmFja2dyb3VuZC1jb2xvcl09XCJiYWNrZ3JvdW5kQ29sb3JcIj5cbiAgICA8ZGl2IGNsYXNzPVwidGl0bGVcIiBbcm91dGVyTGlua109XCInLydcIiBbc3R5bGUuY3Vyc29yXT1cIidwb2ludGVyJ1wiPnt7IHRpdGxlIH19PC9kaXY+XG5cbiAgICA8ZGl2IGNsYXNzPVwic3VidGl0bGVcIj5cbiAgICAgIDxwIFtpbm5lckhUTUxdPVwic3VidGl0bGVJbnNlcnRcIj5cbiAgICAgIDwvcD5cbiAgICA8L2Rpdj5cblxuICAgIDxkaXYgY2xhc3M9XCJjb250ZW50LXNwYWNlclwiPjwvZGl2PlxuICAgIEBpZiAodmVyc2lvbikge1xuICAgICAgPGRpdiBjbGFzcz1cInZlcnNpb24tbGFiZWxcIj5cbiAgICAgICAgVmVyc2lvbjoge3sgdmVyc2lvbiB9fVxuICAgICAgPC9kaXY+XG4gICAgfVxuICAgIEBpZiAoY29uZmlndXJhdGlvbj8ubWVudUl0ZW0pIHtcbiAgICAgIDxkaXY+XG4gICAgICAgIDxidXR0b24gbWF0LWljb24tYnV0dG9uIFttYXRNZW51VHJpZ2dlckZvcl09XCJtZW51XCIgYXJpYS1sYWJlbD1cIk1lbnVcIj5cbiAgICAgICAgICA8bWF0LWljb24+bW9yZV92ZXJ0PC9tYXQtaWNvbj5cbiAgICAgICAgPC9idXR0b24+XG4gICAgICA8L2Rpdj5cbiAgICB9XG4gICAgPGRpdj5cbiAgICAgIEBpZiAoc2hvd1VzZXJNYW5hZ2VtZW50KSB7XG4gICAgICAgIDxidXR0b24gbWF0LWljb24tYnV0dG9uIGFyaWEtbGFiZWw9XCJVc2VyIE1hbmFnZW1lbnRcIj5cbiAgICAgICAgICA8bWF0LWljb24+YWNjb3VudF9jaXJjbGU8L21hdC1pY29uPlxuICAgICAgICA8L2J1dHRvbj5cbiAgICAgIH1cbiAgICA8L2Rpdj5cbiAgPC9tYXQtdG9vbGJhci1yb3c+XG5cbiAgPG1hdC1tZW51ICNtZW51PVwibWF0TWVudVwiPlxuICAgIEBmb3IgKGl0ZW0gb2YgY29uZmlndXJhdGlvbj8ubWVudUl0ZW07IHRyYWNrIGl0ZW0pIHtcblxuICAgICAgQGlmIChpdGVtLmRpdmlkZXIpIHtcbiAgICAgICAgPG1hdC1kaXZpZGVyPjwvbWF0LWRpdmlkZXI+XG4gICAgICB9XG4gICAgICBAaWYgKCFpdGVtLmRpdmlkZXIpIHtcbiAgICAgICAgPGJ1dHRvbiBtYXQtbWVudS1pdGVtIChjbGljayk9XCJvcGVuTGluayhpdGVtLmxpbmspXCI+XG4gICAgICAgICAgPHNwYW4+e3sgaXRlbS5sYWJlbCB9fTwvc3Bhbj5cbiAgICAgICAgPC9idXR0b24+XG4gICAgICB9XG5cbiAgICB9XG4gIDwvbWF0LW1lbnU+XG48L21hdC10b29sYmFyPlxuXG5cblxuPCEtLSZsdDshJm5kYXNoOyBBZGQgbGlua3MgdG8gbWFqb3IgZmVhdHVyZXMgYXMgdGhleSBhcmUgaW1wbGVtZW50ZWQgaGVyZS4gJm5kYXNoOyZndDstLT5cblxuXG5cblxuPCEtLTxtYXQtbWVudSAjbWVudT1cIm1hdE1lbnVcIj4tLT5cbjwhLS0gIDxidXR0b24gbWF0LW1lbnUtaXRlbSBvbmNsaWNrPVwid2luZG93Lm9wZW4oJ2h0dHBzOi8vcmF2ZW5kb2NzLnJlYWR0aGVkb2NzLmlvL2VuL2xhdGVzdC8nLCdfYmxhbmsnKVwiPi0tPlxuPCEtLSAgICA8c3Bhbj5Eb2N1bWVudGF0aW9uPC9zcGFuPi0tPlxuPCEtLSAgPC9idXR0b24+LS0+XG48IS0tICA8YnV0dG9uIG1hdC1tZW51LWl0ZW0gb25jbGljaz1cIndpbmRvdy5vcGVuKCdodHRwczovL2dpdGh1Yi5jb20vTW9ydGFsaXR5UmVwb3J0aW5nJywnX2JsYW5rJylcIj4tLT5cbjwhLS0gICAgPHNwYW4+TW9ydGFsaXR5IFJlcG9ydGluZyBHaXRIdWI8L3NwYW4+LS0+XG48IS0tICA8L2J1dHRvbj4tLT5cbjwhLS0gIDxtYXQtZGl2aWRlcj48L21hdC1kaXZpZGVyPi0tPlxuPCEtLSAgPGJ1dHRvbiBtYXQtbWVudS1pdGVtIG9uY2xpY2s9XCJ3aW5kb3cub3BlbignaHR0cHM6Ly9jaGF0LmZoaXIub3JnJywnX2JsYW5rJylcIj4tLT5cbjwhLS0gICAgPHNwYW4+RkhJUiBadWxpcCBDaGF0PC9zcGFuPi0tPlxuPCEtLSAgPC9idXR0b24+LS0+XG48IS0tPC9tYXQtbWVudT4tLT5cblxuIl19