import { Component, Input } from '@angular/core';
import { MatButtonModule } from "@angular/material/button";
import { MatToolbarModule } from "@angular/material/toolbar";
import { MatIconModule } from "@angular/material/icon";
import { CommonModule } from "@angular/common";
import { MatMenuModule } from "@angular/material/menu";
import { RouterLink } from "@angular/router";
import { MatDividerModule } from "@angular/material/divider";
import { BrowserModule } from "@angular/platform-browser";
import * as i0 from "@angular/core";
import * as i1 from "@angular/material/button";
import * as i2 from "@angular/material/toolbar";
import * as i3 from "@angular/material/icon";
import * as i4 from "@angular/common";
import * as i5 from "@angular/material/menu";
import * as i6 from "@angular/material/divider";
export class HeaderComponent {
    constructor() {
        this.title = "";
        this.version = "";
        this.subtitle = "";
        this.splitSubtitleEvenly = false;
        this.showUserManagement = false;
        this.backgroundColor = "#646064";
        this.subtitleInsert = undefined;
    }
    ngOnInit() {
        if (this.splitSubtitleEvenly) {
            this.subtitleInsert = this.splitSubtitle(this.subtitle);
        }
        else {
            this.subtitleInsert = this.subtitle;
        }
    }
    splitSubtitle(subtitle) {
        const subtitleWordList = subtitle.split(" ");
        const halfLength = Math.floor(subtitleWordList.length / 2);
        let recombinedSubtitle = "";
        subtitleWordList.map((word, i) => {
            recombinedSubtitle += word + " ";
            if (i == halfLength) {
                recombinedSubtitle += "<br>";
            }
        });
        return recombinedSubtitle;
    }
    openLink(link) {
        if (link)
            window.open(link, '_blank');
    }
    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "17.0.9", ngImport: i0, type: HeaderComponent, deps: [], target: i0.ɵɵFactoryTarget.Component }); }
    static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "14.0.0", version: "17.0.9", type: HeaderComponent, isStandalone: true, selector: "common-header", inputs: { configuration: "configuration", title: "title", version: "version", subtitle: "subtitle", splitSubtitleEvenly: "splitSubtitleEvenly", showUserManagement: "showUserManagement", backgroundColor: "backgroundColor" }, ngImport: i0, template: "<mat-toolbar class=\"header\">\n\n  <mat-toolbar-row [style.background-color]=\"backgroundColor\">\n    <div class=\"title\" [routerLink]=\"'/'\" [style.cursor]=\"'pointer'\">{{ title }}</div>\n\n    <div class=\"subtitle\">\n      <p [innerHTML]=\"subtitleInsert\">\n      </p>\n    </div>\n\n    <div class=\"content-spacer\"></div>\n    <div class=\"version-label\" *ngIf=\"version\">\n      Version: {{ version }}\n    </div>\n    <div *ngIf=\"configuration?.menuItem\">\n      <button mat-icon-button [matMenuTriggerFor]=\"menu\" aria-label=\"Menu\">\n        <mat-icon>more_vert</mat-icon>\n      </button>\n    </div>\n    <div>\n      <button mat-icon-button aria-label=\"User Management\" *ngIf=\"showUserManagement\">\n        <mat-icon>account_circle</mat-icon>\n      </button>\n    </div>\n  </mat-toolbar-row>\n\n  <mat-menu #menu=\"matMenu\">\n    <div *ngFor=\"let item of configuration?.menuItem\">\n      <mat-divider *ngIf=\"item.divider\"></mat-divider>\n      <button mat-menu-item *ngIf=\"!item.divider\" (click)=\"openLink(item.link)\">\n        <span>{{ item.label }}</span>\n      </button>\n    </div>\n  </mat-menu>\n</mat-toolbar>\n\n\n\n<!--&lt;!&ndash; Add links to major features as they are implemented here. &ndash;&gt;-->\n\n\n\n\n<!--<mat-menu #menu=\"matMenu\">-->\n<!--  <button mat-menu-item onclick=\"window.open('https://ravendocs.readthedocs.io/en/latest/','_blank')\">-->\n<!--    <span>Documentation</span>-->\n<!--  </button>-->\n<!--  <button mat-menu-item onclick=\"window.open('https://github.com/MortalityReporting','_blank')\">-->\n<!--    <span>Mortality Reporting GitHub</span>-->\n<!--  </button>-->\n<!--  <mat-divider></mat-divider>-->\n<!--  <button mat-menu-item onclick=\"window.open('https://chat.fhir.org','_blank')\">-->\n<!--    <span>FHIR Zulip Chat</span>-->\n<!--  </button>-->\n<!--</mat-menu>-->\n\n", styles: [".title{margin-left:10px}.subtitle{margin-left:30px;font-size:small;width:600px;white-space:normal}.subtitle p{overflow-wrap:break-word;line-height:normal;margin:0}.version-label{font-weight:700;font-size:small;margin:5px}.content-spacer{flex:1 1 auto}.header{background-color:indigo;color:#fff}\n"], dependencies: [{ kind: "ngmodule", type: MatButtonModule }, { kind: "component", type: i1.MatIconButton, selector: "button[mat-icon-button]", exportAs: ["matButton"] }, { kind: "ngmodule", type: MatToolbarModule }, { kind: "component", type: i2.MatToolbar, selector: "mat-toolbar", inputs: ["color"], exportAs: ["matToolbar"] }, { kind: "directive", type: i2.MatToolbarRow, selector: "mat-toolbar-row", exportAs: ["matToolbarRow"] }, { kind: "ngmodule", type: MatIconModule }, { kind: "component", type: i3.MatIcon, selector: "mat-icon", inputs: ["color", "inline", "svgIcon", "fontSet", "fontIcon"], exportAs: ["matIcon"] }, { kind: "ngmodule", type: CommonModule }, { kind: "directive", type: i4.NgForOf, selector: "[ngFor][ngForOf]", inputs: ["ngForOf", "ngForTrackBy", "ngForTemplate"] }, { kind: "directive", type: i4.NgIf, selector: "[ngIf]", inputs: ["ngIf", "ngIfThen", "ngIfElse"] }, { kind: "ngmodule", type: MatMenuModule }, { kind: "component", type: i5.MatMenu, selector: "mat-menu", inputs: ["backdropClass", "aria-label", "aria-labelledby", "aria-describedby", "xPosition", "yPosition", "overlapTrigger", "hasBackdrop", "class", "classList"], outputs: ["closed", "close"], exportAs: ["matMenu"] }, { kind: "component", type: i5.MatMenuItem, selector: "[mat-menu-item]", inputs: ["role", "disabled", "disableRipple"], exportAs: ["matMenuItem"] }, { kind: "directive", type: i5.MatMenuTrigger, selector: "[mat-menu-trigger-for], [matMenuTriggerFor]", inputs: ["mat-menu-trigger-for", "matMenuTriggerFor", "matMenuTriggerData", "matMenuTriggerRestoreFocus"], outputs: ["menuOpened", "onMenuOpen", "menuClosed", "onMenuClose"], exportAs: ["matMenuTrigger"] }, { kind: "directive", type: RouterLink, selector: "[routerLink]", inputs: ["target", "queryParams", "fragment", "queryParamsHandling", "state", "relativeTo", "preserveFragment", "skipLocationChange", "replaceUrl", "routerLink"] }, { kind: "ngmodule", type: MatDividerModule }, { kind: "component", type: i6.MatDivider, selector: "mat-divider", inputs: ["vertical", "inset"] }, { kind: "ngmodule", type: BrowserModule }] }); }
}
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "17.0.9", ngImport: i0, type: HeaderComponent, decorators: [{
            type: Component,
            args: [{ standalone: true, imports: [
                        MatButtonModule,
                        MatToolbarModule,
                        MatIconModule,
                        CommonModule,
                        MatMenuModule,
                        RouterLink,
                        MatDividerModule,
                        BrowserModule
                    ], selector: 'common-header', template: "<mat-toolbar class=\"header\">\n\n  <mat-toolbar-row [style.background-color]=\"backgroundColor\">\n    <div class=\"title\" [routerLink]=\"'/'\" [style.cursor]=\"'pointer'\">{{ title }}</div>\n\n    <div class=\"subtitle\">\n      <p [innerHTML]=\"subtitleInsert\">\n      </p>\n    </div>\n\n    <div class=\"content-spacer\"></div>\n    <div class=\"version-label\" *ngIf=\"version\">\n      Version: {{ version }}\n    </div>\n    <div *ngIf=\"configuration?.menuItem\">\n      <button mat-icon-button [matMenuTriggerFor]=\"menu\" aria-label=\"Menu\">\n        <mat-icon>more_vert</mat-icon>\n      </button>\n    </div>\n    <div>\n      <button mat-icon-button aria-label=\"User Management\" *ngIf=\"showUserManagement\">\n        <mat-icon>account_circle</mat-icon>\n      </button>\n    </div>\n  </mat-toolbar-row>\n\n  <mat-menu #menu=\"matMenu\">\n    <div *ngFor=\"let item of configuration?.menuItem\">\n      <mat-divider *ngIf=\"item.divider\"></mat-divider>\n      <button mat-menu-item *ngIf=\"!item.divider\" (click)=\"openLink(item.link)\">\n        <span>{{ item.label }}</span>\n      </button>\n    </div>\n  </mat-menu>\n</mat-toolbar>\n\n\n\n<!--&lt;!&ndash; Add links to major features as they are implemented here. &ndash;&gt;-->\n\n\n\n\n<!--<mat-menu #menu=\"matMenu\">-->\n<!--  <button mat-menu-item onclick=\"window.open('https://ravendocs.readthedocs.io/en/latest/','_blank')\">-->\n<!--    <span>Documentation</span>-->\n<!--  </button>-->\n<!--  <button mat-menu-item onclick=\"window.open('https://github.com/MortalityReporting','_blank')\">-->\n<!--    <span>Mortality Reporting GitHub</span>-->\n<!--  </button>-->\n<!--  <mat-divider></mat-divider>-->\n<!--  <button mat-menu-item onclick=\"window.open('https://chat.fhir.org','_blank')\">-->\n<!--    <span>FHIR Zulip Chat</span>-->\n<!--  </button>-->\n<!--</mat-menu>-->\n\n", styles: [".title{margin-left:10px}.subtitle{margin-left:30px;font-size:small;width:600px;white-space:normal}.subtitle p{overflow-wrap:break-word;line-height:normal;margin:0}.version-label{font-weight:700;font-size:small;margin:5px}.content-spacer{flex:1 1 auto}.header{background-color:indigo;color:#fff}\n"] }]
        }], ctorParameters: () => [], propDecorators: { configuration: [{
                type: Input
            }], title: [{
                type: Input
            }], version: [{
                type: Input
            }], subtitle: [{
                type: Input
            }], splitSubtitleEvenly: [{
                type: Input
            }], showUserManagement: [{
                type: Input
            }], backgroundColor: [{
                type: Input
            }] } });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaGVhZGVyLmNvbXBvbmVudC5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uLy4uL3Byb2plY3RzL25neC1oaXNiLWNvbW1vbi11aS9zcmMvbGliL2hlYWRlci9oZWFkZXIuY29tcG9uZW50LnRzIiwiLi4vLi4vLi4vLi4vLi4vcHJvamVjdHMvbmd4LWhpc2ItY29tbW9uLXVpL3NyYy9saWIvaGVhZGVyL2hlYWRlci5jb21wb25lbnQuaHRtbCJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxPQUFPLEVBQUMsU0FBUyxFQUFFLEtBQUssRUFBUyxNQUFNLGVBQWUsQ0FBQztBQUV2RCxPQUFPLEVBQUMsZUFBZSxFQUFDLE1BQU0sMEJBQTBCLENBQUM7QUFDekQsT0FBTyxFQUFDLGdCQUFnQixFQUFDLE1BQU0sMkJBQTJCLENBQUM7QUFDM0QsT0FBTyxFQUFDLGFBQWEsRUFBQyxNQUFNLHdCQUF3QixDQUFDO0FBQ3JELE9BQU8sRUFBQyxZQUFZLEVBQU8sTUFBTSxpQkFBaUIsQ0FBQztBQUNuRCxPQUFPLEVBQUMsYUFBYSxFQUFDLE1BQU0sd0JBQXdCLENBQUM7QUFDckQsT0FBTyxFQUFDLFVBQVUsRUFBQyxNQUFNLGlCQUFpQixDQUFDO0FBQzNDLE9BQU8sRUFBQyxnQkFBZ0IsRUFBQyxNQUFNLDJCQUEyQixDQUFDO0FBQzNELE9BQU8sRUFBQyxhQUFhLEVBQUMsTUFBTSwyQkFBMkIsQ0FBQzs7Ozs7Ozs7QUFrQnhELE1BQU0sT0FBTyxlQUFlO0lBVTFCO1FBUlMsVUFBSyxHQUFXLEVBQUUsQ0FBQztRQUNuQixZQUFPLEdBQVcsRUFBRSxDQUFDO1FBQ3JCLGFBQVEsR0FBVyxFQUFFLENBQUM7UUFDdEIsd0JBQW1CLEdBQVksS0FBSyxDQUFDO1FBQ3JDLHVCQUFrQixHQUFZLEtBQUssQ0FBQztRQUNwQyxvQkFBZSxHQUFXLFNBQVMsQ0FBQztRQUM3QyxtQkFBYyxHQUFRLFNBQVMsQ0FBQztJQUVqQixDQUFDO0lBRWhCLFFBQVE7UUFDTixJQUFJLElBQUksQ0FBQyxtQkFBbUIsRUFBRTtZQUM1QixJQUFJLENBQUMsY0FBYyxHQUFHLElBQUksQ0FBQyxhQUFhLENBQUMsSUFBSSxDQUFDLFFBQVEsQ0FBQyxDQUFDO1NBQ3pEO2FBQ0k7WUFDSCxJQUFJLENBQUMsY0FBYyxHQUFHLElBQUksQ0FBQyxRQUFRLENBQUM7U0FDckM7SUFDSCxDQUFDO0lBRU8sYUFBYSxDQUFDLFFBQWdCO1FBQ3BDLE1BQU0sZ0JBQWdCLEdBQUcsUUFBUSxDQUFDLEtBQUssQ0FBQyxHQUFHLENBQUMsQ0FBQztRQUM3QyxNQUFNLFVBQVUsR0FBRyxJQUFJLENBQUMsS0FBSyxDQUFDLGdCQUFnQixDQUFDLE1BQU0sR0FBRyxDQUFDLENBQUMsQ0FBQztRQUMzRCxJQUFJLGtCQUFrQixHQUFHLEVBQUUsQ0FBQztRQUM1QixnQkFBZ0IsQ0FBQyxHQUFHLENBQUMsQ0FBQyxJQUFJLEVBQUUsQ0FBQyxFQUFFLEVBQUU7WUFDL0Isa0JBQWtCLElBQUksSUFBSSxHQUFHLEdBQUcsQ0FBQztZQUNqQyxJQUFJLENBQUMsSUFBSSxVQUFVLEVBQUU7Z0JBQ25CLGtCQUFrQixJQUFJLE1BQU0sQ0FBQzthQUM5QjtRQUNILENBQUMsQ0FBQyxDQUFDO1FBQ0gsT0FBTyxrQkFBa0IsQ0FBQTtJQUMzQixDQUFDO0lBRUQsUUFBUSxDQUFDLElBQXdCO1FBQy9CLElBQUksSUFBSTtZQUFFLE1BQU0sQ0FBQyxJQUFJLENBQUMsSUFBSSxFQUFDLFFBQVEsQ0FBQyxDQUFDO0lBQ3ZDLENBQUM7OEdBcENVLGVBQWU7a0dBQWYsZUFBZSx5U0MzQjVCLDIwREF3REEsaVdEMUNJLGVBQWUsMklBQ2YsZ0JBQWdCLHlQQUNoQixhQUFhLG1MQUNiLFlBQVksK1BBQ1osYUFBYSw4dkJBQ2IsVUFBVSwyTkFDVixnQkFBZ0Isa0lBQ2hCLGFBQWE7OzJGQU1KLGVBQWU7a0JBaEIzQixTQUFTO2lDQUNJLElBQUksV0FDUDt3QkFDUCxlQUFlO3dCQUNmLGdCQUFnQjt3QkFDaEIsYUFBYTt3QkFDYixZQUFZO3dCQUNaLGFBQWE7d0JBQ2IsVUFBVTt3QkFDVixnQkFBZ0I7d0JBQ2hCLGFBQWE7cUJBQ2QsWUFDUyxlQUFlO3dEQUtoQixhQUFhO3NCQUFyQixLQUFLO2dCQUNHLEtBQUs7c0JBQWIsS0FBSztnQkFDRyxPQUFPO3NCQUFmLEtBQUs7Z0JBQ0csUUFBUTtzQkFBaEIsS0FBSztnQkFDRyxtQkFBbUI7c0JBQTNCLEtBQUs7Z0JBQ0csa0JBQWtCO3NCQUExQixLQUFLO2dCQUNHLGVBQWU7c0JBQXZCLEtBQUsiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQge0NvbXBvbmVudCwgSW5wdXQsIE9uSW5pdH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5pbXBvcnQge0hlYWRlckNvbmZpZ30gZnJvbSBcIi4vaGVhZGVyLmNvbmZpZ1wiO1xuaW1wb3J0IHtNYXRCdXR0b25Nb2R1bGV9IGZyb20gXCJAYW5ndWxhci9tYXRlcmlhbC9idXR0b25cIjtcbmltcG9ydCB7TWF0VG9vbGJhck1vZHVsZX0gZnJvbSBcIkBhbmd1bGFyL21hdGVyaWFsL3Rvb2xiYXJcIjtcbmltcG9ydCB7TWF0SWNvbk1vZHVsZX0gZnJvbSBcIkBhbmd1bGFyL21hdGVyaWFsL2ljb25cIjtcbmltcG9ydCB7Q29tbW9uTW9kdWxlLCBOZ0lmfSBmcm9tIFwiQGFuZ3VsYXIvY29tbW9uXCI7XG5pbXBvcnQge01hdE1lbnVNb2R1bGV9IGZyb20gXCJAYW5ndWxhci9tYXRlcmlhbC9tZW51XCI7XG5pbXBvcnQge1JvdXRlckxpbmt9IGZyb20gXCJAYW5ndWxhci9yb3V0ZXJcIjtcbmltcG9ydCB7TWF0RGl2aWRlck1vZHVsZX0gZnJvbSBcIkBhbmd1bGFyL21hdGVyaWFsL2RpdmlkZXJcIjtcbmltcG9ydCB7QnJvd3Nlck1vZHVsZX0gZnJvbSBcIkBhbmd1bGFyL3BsYXRmb3JtLWJyb3dzZXJcIjtcblxuQENvbXBvbmVudCh7XG4gIHN0YW5kYWxvbmU6IHRydWUsXG4gIGltcG9ydHM6IFtcbiAgICBNYXRCdXR0b25Nb2R1bGUsXG4gICAgTWF0VG9vbGJhck1vZHVsZSxcbiAgICBNYXRJY29uTW9kdWxlLFxuICAgIENvbW1vbk1vZHVsZSxcbiAgICBNYXRNZW51TW9kdWxlLFxuICAgIFJvdXRlckxpbmssXG4gICAgTWF0RGl2aWRlck1vZHVsZSxcbiAgICBCcm93c2VyTW9kdWxlXG4gIF0sXG4gIHNlbGVjdG9yOiAnY29tbW9uLWhlYWRlcicsXG4gIHN0eWxlVXJsczogWycuL2hlYWRlci5jb21wb25lbnQuY3NzJ10sXG4gIHRlbXBsYXRlVXJsOiAnaGVhZGVyLmNvbXBvbmVudC5odG1sJ1xufSlcbmV4cG9ydCBjbGFzcyBIZWFkZXJDb21wb25lbnQgaW1wbGVtZW50cyBPbkluaXQge1xuICBASW5wdXQoKSBjb25maWd1cmF0aW9uOiBIZWFkZXJDb25maWcgfCB1bmRlZmluZWQ7XG4gIEBJbnB1dCgpIHRpdGxlOiBzdHJpbmcgPSBcIlwiO1xuICBASW5wdXQoKSB2ZXJzaW9uOiBzdHJpbmcgPSBcIlwiO1xuICBASW5wdXQoKSBzdWJ0aXRsZTogc3RyaW5nID0gXCJcIjtcbiAgQElucHV0KCkgc3BsaXRTdWJ0aXRsZUV2ZW5seTogYm9vbGVhbiA9IGZhbHNlO1xuICBASW5wdXQoKSBzaG93VXNlck1hbmFnZW1lbnQ6IGJvb2xlYW4gPSBmYWxzZTtcbiAgQElucHV0KCkgYmFja2dyb3VuZENvbG9yOiBzdHJpbmcgPSBcIiM2NDYwNjRcIjtcbiAgc3VidGl0bGVJbnNlcnQ6IGFueSA9IHVuZGVmaW5lZDtcblxuICBjb25zdHJ1Y3RvcigpIHt9XG5cbiAgbmdPbkluaXQoKTogdm9pZCB7XG4gICAgaWYgKHRoaXMuc3BsaXRTdWJ0aXRsZUV2ZW5seSkge1xuICAgICAgdGhpcy5zdWJ0aXRsZUluc2VydCA9IHRoaXMuc3BsaXRTdWJ0aXRsZSh0aGlzLnN1YnRpdGxlKTtcbiAgICB9XG4gICAgZWxzZSB7XG4gICAgICB0aGlzLnN1YnRpdGxlSW5zZXJ0ID0gdGhpcy5zdWJ0aXRsZTtcbiAgICB9XG4gIH1cblxuICBwcml2YXRlIHNwbGl0U3VidGl0bGUoc3VidGl0bGU6IHN0cmluZyk6IHN0cmluZyB7XG4gICAgY29uc3Qgc3VidGl0bGVXb3JkTGlzdCA9IHN1YnRpdGxlLnNwbGl0KFwiIFwiKTtcbiAgICBjb25zdCBoYWxmTGVuZ3RoID0gTWF0aC5mbG9vcihzdWJ0aXRsZVdvcmRMaXN0Lmxlbmd0aCAvIDIpO1xuICAgIGxldCByZWNvbWJpbmVkU3VidGl0bGUgPSBcIlwiO1xuICAgIHN1YnRpdGxlV29yZExpc3QubWFwKCh3b3JkLCBpKSA9PiB7XG4gICAgICByZWNvbWJpbmVkU3VidGl0bGUgKz0gd29yZCArIFwiIFwiO1xuICAgICAgaWYgKGkgPT0gaGFsZkxlbmd0aCkge1xuICAgICAgICByZWNvbWJpbmVkU3VidGl0bGUgKz0gXCI8YnI+XCI7XG4gICAgICB9XG4gICAgfSk7XG4gICAgcmV0dXJuIHJlY29tYmluZWRTdWJ0aXRsZVxuICB9XG5cbiAgb3BlbkxpbmsobGluazogc3RyaW5nIHwgdW5kZWZpbmVkKSB7XG4gICAgaWYgKGxpbmspIHdpbmRvdy5vcGVuKGxpbmssJ19ibGFuaycpO1xuICB9XG59XG4iLCI8bWF0LXRvb2xiYXIgY2xhc3M9XCJoZWFkZXJcIj5cblxuICA8bWF0LXRvb2xiYXItcm93IFtzdHlsZS5iYWNrZ3JvdW5kLWNvbG9yXT1cImJhY2tncm91bmRDb2xvclwiPlxuICAgIDxkaXYgY2xhc3M9XCJ0aXRsZVwiIFtyb3V0ZXJMaW5rXT1cIicvJ1wiIFtzdHlsZS5jdXJzb3JdPVwiJ3BvaW50ZXInXCI+e3sgdGl0bGUgfX08L2Rpdj5cblxuICAgIDxkaXYgY2xhc3M9XCJzdWJ0aXRsZVwiPlxuICAgICAgPHAgW2lubmVySFRNTF09XCJzdWJ0aXRsZUluc2VydFwiPlxuICAgICAgPC9wPlxuICAgIDwvZGl2PlxuXG4gICAgPGRpdiBjbGFzcz1cImNvbnRlbnQtc3BhY2VyXCI+PC9kaXY+XG4gICAgPGRpdiBjbGFzcz1cInZlcnNpb24tbGFiZWxcIiAqbmdJZj1cInZlcnNpb25cIj5cbiAgICAgIFZlcnNpb246IHt7IHZlcnNpb24gfX1cbiAgICA8L2Rpdj5cbiAgICA8ZGl2ICpuZ0lmPVwiY29uZmlndXJhdGlvbj8ubWVudUl0ZW1cIj5cbiAgICAgIDxidXR0b24gbWF0LWljb24tYnV0dG9uIFttYXRNZW51VHJpZ2dlckZvcl09XCJtZW51XCIgYXJpYS1sYWJlbD1cIk1lbnVcIj5cbiAgICAgICAgPG1hdC1pY29uPm1vcmVfdmVydDwvbWF0LWljb24+XG4gICAgICA8L2J1dHRvbj5cbiAgICA8L2Rpdj5cbiAgICA8ZGl2PlxuICAgICAgPGJ1dHRvbiBtYXQtaWNvbi1idXR0b24gYXJpYS1sYWJlbD1cIlVzZXIgTWFuYWdlbWVudFwiICpuZ0lmPVwic2hvd1VzZXJNYW5hZ2VtZW50XCI+XG4gICAgICAgIDxtYXQtaWNvbj5hY2NvdW50X2NpcmNsZTwvbWF0LWljb24+XG4gICAgICA8L2J1dHRvbj5cbiAgICA8L2Rpdj5cbiAgPC9tYXQtdG9vbGJhci1yb3c+XG5cbiAgPG1hdC1tZW51ICNtZW51PVwibWF0TWVudVwiPlxuICAgIDxkaXYgKm5nRm9yPVwibGV0IGl0ZW0gb2YgY29uZmlndXJhdGlvbj8ubWVudUl0ZW1cIj5cbiAgICAgIDxtYXQtZGl2aWRlciAqbmdJZj1cIml0ZW0uZGl2aWRlclwiPjwvbWF0LWRpdmlkZXI+XG4gICAgICA8YnV0dG9uIG1hdC1tZW51LWl0ZW0gKm5nSWY9XCIhaXRlbS5kaXZpZGVyXCIgKGNsaWNrKT1cIm9wZW5MaW5rKGl0ZW0ubGluaylcIj5cbiAgICAgICAgPHNwYW4+e3sgaXRlbS5sYWJlbCB9fTwvc3Bhbj5cbiAgICAgIDwvYnV0dG9uPlxuICAgIDwvZGl2PlxuICA8L21hdC1tZW51PlxuPC9tYXQtdG9vbGJhcj5cblxuXG5cbjwhLS0mbHQ7ISZuZGFzaDsgQWRkIGxpbmtzIHRvIG1ham9yIGZlYXR1cmVzIGFzIHRoZXkgYXJlIGltcGxlbWVudGVkIGhlcmUuICZuZGFzaDsmZ3Q7LS0+XG5cblxuXG5cbjwhLS08bWF0LW1lbnUgI21lbnU9XCJtYXRNZW51XCI+LS0+XG48IS0tICA8YnV0dG9uIG1hdC1tZW51LWl0ZW0gb25jbGljaz1cIndpbmRvdy5vcGVuKCdodHRwczovL3JhdmVuZG9jcy5yZWFkdGhlZG9jcy5pby9lbi9sYXRlc3QvJywnX2JsYW5rJylcIj4tLT5cbjwhLS0gICAgPHNwYW4+RG9jdW1lbnRhdGlvbjwvc3Bhbj4tLT5cbjwhLS0gIDwvYnV0dG9uPi0tPlxuPCEtLSAgPGJ1dHRvbiBtYXQtbWVudS1pdGVtIG9uY2xpY2s9XCJ3aW5kb3cub3BlbignaHR0cHM6Ly9naXRodWIuY29tL01vcnRhbGl0eVJlcG9ydGluZycsJ19ibGFuaycpXCI+LS0+XG48IS0tICAgIDxzcGFuPk1vcnRhbGl0eSBSZXBvcnRpbmcgR2l0SHViPC9zcGFuPi0tPlxuPCEtLSAgPC9idXR0b24+LS0+XG48IS0tICA8bWF0LWRpdmlkZXI+PC9tYXQtZGl2aWRlcj4tLT5cbjwhLS0gIDxidXR0b24gbWF0LW1lbnUtaXRlbSBvbmNsaWNrPVwid2luZG93Lm9wZW4oJ2h0dHBzOi8vY2hhdC5maGlyLm9yZycsJ19ibGFuaycpXCI+LS0+XG48IS0tICAgIDxzcGFuPkZISVIgWnVsaXAgQ2hhdDwvc3Bhbj4tLT5cbjwhLS0gIDwvYnV0dG9uPi0tPlxuPCEtLTwvbWF0LW1lbnU+LS0+XG5cbiJdfQ==