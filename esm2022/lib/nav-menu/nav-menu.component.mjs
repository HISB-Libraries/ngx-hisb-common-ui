import { Component, Input } from '@angular/core';
import { MatButtonModule } from "@angular/material/button";
import { MatToolbarModule } from "@angular/material/toolbar";
import { MatIconModule } from "@angular/material/icon";
import { MatTooltipModule } from "@angular/material/tooltip";
import { RouterLink } from "@angular/router";
import { MatMenuModule } from "@angular/material/menu";
import { tap } from "rxjs";
import * as i0 from "@angular/core";
import * as i1 from "@angular/router";
import * as i2 from "@angular/material/button";
import * as i3 from "@angular/material/icon";
import * as i4 from "@angular/material/toolbar";
import * as i5 from "@angular/material/tooltip";
export class NavMenuComponent {
    constructor(activatedRoute) {
        this.activatedRoute = activatedRoute;
        this.backgroundColor = "#646064";
        this.contrastColor = "white";
        this.options = { options: [] };
        this.expanded = true;
        this.selectedOption = 0;
    }
    ngOnInit() {
        this.setCurrentRoute();
    }
    toggleSize() {
        this.expanded = !this.expanded;
    }
    select(i) {
        this.selectedOption = i;
    }
    /**
     * Sets the menu to correspond to the current route.
     * When the user reloads the app from a page different from home, we want to select the menu item corresponding to the current route.
     * @private
     */
    setCurrentRoute() {
        this.activatedRoute.url.pipe(tap(result => console.log(result))).subscribe(result => {
            this.selectedOption = this.options.options?.findIndex(el => el.routerLink == result?.[0].path) || 0;
            console.log(result);
            console.log(this.selectedOption);
        });
        // try {
        //
        //   const currentRoute = this.getModuleUrl(this.router.url);
        //   this.selectedOption = this.options.options?.findIndex(el => el.routerLink == currentRoute) || 0; // assume that the first item of the menu is Home
        // } catch (e) {
        //   console.error(e);
        //   this.router.navigate(['/']);
        // }
    }
    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "18.0.0", ngImport: i0, type: NavMenuComponent, deps: [{ token: i1.ActivatedRoute }], target: i0.ɵɵFactoryTarget.Component }); }
    static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "17.0.0", version: "18.0.0", type: NavMenuComponent, isStandalone: true, selector: "common-nav-menu", inputs: { backgroundColor: "backgroundColor", contrastColor: "contrastColor", options: "options" }, ngImport: i0, template: "<div class=\"menu-wrapper\" [style.background-color]=\"backgroundColor\" [style.width]=\"expanded ? '100px' : '50px'\">\n  <mat-toolbar color=primary>\n    <mat-toolbar-row [style.background-color]=\"backgroundColor\" [style.padding]=\"'0 0 0 0'\">\n      <div class=\"menu-button-wrapper\">\n        <button mat-icon-button aria-label=\"Menu\" (click)=\"toggleSize()\">\n          <mat-icon>menu</mat-icon>\n        </button>\n      </div>\n    </mat-toolbar-row>\n  </mat-toolbar>\n\n  <div class=\"vertical-spacer\"></div>\n\n  @for (item of options.options; track item; let i = $index) {\n    <div class=\"option-wrapper\"\n      [style.background-color]=\"i === selectedOption ? contrastColor : backgroundColor \"\n      [style.color]=\"i === selectedOption ?  backgroundColor : contrastColor\"\n      (click)=\"select(i)\"\n      matTooltip=\"{{item.label}}\"\n      matTooltipPosition=\"after\"\n      [matTooltipDisabled]=\"expanded\"\n      [routerLink]=\"item.routerLink\"\n      >\n      <mat-icon [class]=\"expanded? 'scaled-icon' : 'small-icon'\" svgIcon=\"{{item.iconName}}\">\n      </mat-icon>\n      <br>\n        @if (expanded) {\n          <span class=\"icon-label-large\">{{item.label}}</span>\n        }\n      </div>\n    }\n  </div>\n", styles: [".menu-wrapper{color:#fff;margin:0;height:100%;text-align:center}.option-wrapper{margin:8px 0;cursor:pointer}.vertical-spacer{height:16px}.scaled-icon,.small-icon{font-size:32px;width:32px;height:32px}.icon-label-large{font-size:14px}.menu-button-wrapper{width:100%;padding:0}\n"], dependencies: [{ kind: "ngmodule", type: MatButtonModule }, { kind: "component", type: i2.MatIconButton, selector: "button[mat-icon-button]", exportAs: ["matButton"] }, { kind: "ngmodule", type: MatIconModule }, { kind: "component", type: i3.MatIcon, selector: "mat-icon", inputs: ["color", "inline", "svgIcon", "fontSet", "fontIcon"], exportAs: ["matIcon"] }, { kind: "ngmodule", type: MatToolbarModule }, { kind: "component", type: i4.MatToolbar, selector: "mat-toolbar", inputs: ["color"], exportAs: ["matToolbar"] }, { kind: "directive", type: i4.MatToolbarRow, selector: "mat-toolbar-row", exportAs: ["matToolbarRow"] }, { kind: "ngmodule", type: MatTooltipModule }, { kind: "directive", type: i5.MatTooltip, selector: "[matTooltip]", inputs: ["matTooltipPosition", "matTooltipPositionAtOrigin", "matTooltipDisabled", "matTooltipShowDelay", "matTooltipHideDelay", "matTooltipTouchGestures", "matTooltip", "matTooltipClass"], exportAs: ["matTooltip"] }, { kind: "directive", type: RouterLink, selector: "[routerLink]", inputs: ["target", "queryParams", "fragment", "queryParamsHandling", "state", "info", "relativeTo", "preserveFragment", "skipLocationChange", "replaceUrl", "routerLink"] }, { kind: "ngmodule", type: MatMenuModule }] }); }
}
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "18.0.0", ngImport: i0, type: NavMenuComponent, decorators: [{
            type: Component,
            args: [{ standalone: true, imports: [
                        MatButtonModule,
                        MatIconModule,
                        MatToolbarModule,
                        MatTooltipModule,
                        RouterLink,
                        MatMenuModule
                    ], selector: 'common-nav-menu', template: "<div class=\"menu-wrapper\" [style.background-color]=\"backgroundColor\" [style.width]=\"expanded ? '100px' : '50px'\">\n  <mat-toolbar color=primary>\n    <mat-toolbar-row [style.background-color]=\"backgroundColor\" [style.padding]=\"'0 0 0 0'\">\n      <div class=\"menu-button-wrapper\">\n        <button mat-icon-button aria-label=\"Menu\" (click)=\"toggleSize()\">\n          <mat-icon>menu</mat-icon>\n        </button>\n      </div>\n    </mat-toolbar-row>\n  </mat-toolbar>\n\n  <div class=\"vertical-spacer\"></div>\n\n  @for (item of options.options; track item; let i = $index) {\n    <div class=\"option-wrapper\"\n      [style.background-color]=\"i === selectedOption ? contrastColor : backgroundColor \"\n      [style.color]=\"i === selectedOption ?  backgroundColor : contrastColor\"\n      (click)=\"select(i)\"\n      matTooltip=\"{{item.label}}\"\n      matTooltipPosition=\"after\"\n      [matTooltipDisabled]=\"expanded\"\n      [routerLink]=\"item.routerLink\"\n      >\n      <mat-icon [class]=\"expanded? 'scaled-icon' : 'small-icon'\" svgIcon=\"{{item.iconName}}\">\n      </mat-icon>\n      <br>\n        @if (expanded) {\n          <span class=\"icon-label-large\">{{item.label}}</span>\n        }\n      </div>\n    }\n  </div>\n", styles: [".menu-wrapper{color:#fff;margin:0;height:100%;text-align:center}.option-wrapper{margin:8px 0;cursor:pointer}.vertical-spacer{height:16px}.scaled-icon,.small-icon{font-size:32px;width:32px;height:32px}.icon-label-large{font-size:14px}.menu-button-wrapper{width:100%;padding:0}\n"] }]
        }], ctorParameters: () => [{ type: i1.ActivatedRoute }], propDecorators: { backgroundColor: [{
                type: Input
            }], contrastColor: [{
                type: Input
            }], options: [{
                type: Input
            }] } });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibmF2LW1lbnUuY29tcG9uZW50LmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vLi4vcHJvamVjdHMvbmd4LWhpc2ItY29tbW9uLXVpL3NyYy9saWIvbmF2LW1lbnUvbmF2LW1lbnUuY29tcG9uZW50LnRzIiwiLi4vLi4vLi4vLi4vLi4vcHJvamVjdHMvbmd4LWhpc2ItY29tbW9uLXVpL3NyYy9saWIvbmF2LW1lbnUvbmF2LW1lbnUuY29tcG9uZW50Lmh0bWwiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsT0FBTyxFQUFDLFNBQVMsRUFBRSxLQUFLLEVBQVMsTUFBTSxlQUFlLENBQUM7QUFFdkQsT0FBTyxFQUFDLGVBQWUsRUFBQyxNQUFNLDBCQUEwQixDQUFDO0FBQ3pELE9BQU8sRUFBQyxnQkFBZ0IsRUFBQyxNQUFNLDJCQUEyQixDQUFDO0FBQzNELE9BQU8sRUFBQyxhQUFhLEVBQUMsTUFBTSx3QkFBd0IsQ0FBQztBQUNyRCxPQUFPLEVBQUMsZ0JBQWdCLEVBQUMsTUFBTSwyQkFBMkIsQ0FBQztBQUUzRCxPQUFPLEVBQXlCLFVBQVUsRUFBQyxNQUFNLGlCQUFpQixDQUFDO0FBQ25FLE9BQU8sRUFBQyxhQUFhLEVBQUMsTUFBTSx3QkFBd0IsQ0FBQztBQUNyRCxPQUFPLEVBQWEsR0FBRyxFQUFDLE1BQU0sTUFBTSxDQUFDOzs7Ozs7O0FBZ0JyQyxNQUFNLE9BQU8sZ0JBQWdCO0lBTzNCLFlBQW9CLGNBQThCO1FBQTlCLG1CQUFjLEdBQWQsY0FBYyxDQUFnQjtRQU56QyxvQkFBZSxHQUFXLFNBQVMsQ0FBQztRQUNwQyxrQkFBYSxHQUFXLE9BQU8sQ0FBQztRQUNoQyxZQUFPLEdBQWlCLEVBQUMsT0FBTyxFQUFFLEVBQUUsRUFBQyxDQUFDO1FBQy9DLGFBQVEsR0FBWSxJQUFJLENBQUM7UUFDekIsbUJBQWMsR0FBRyxDQUFDLENBQUM7SUFFbUMsQ0FBQztJQUV2RCxRQUFRO1FBQ04sSUFBSSxDQUFDLGVBQWUsRUFBRSxDQUFDO0lBQ3pCLENBQUM7SUFFRCxVQUFVO1FBQ1IsSUFBSSxDQUFDLFFBQVEsR0FBRyxDQUFDLElBQUksQ0FBQyxRQUFRLENBQUM7SUFDakMsQ0FBQztJQUVELE1BQU0sQ0FBQyxDQUFTO1FBQ2QsSUFBSSxDQUFDLGNBQWMsR0FBRyxDQUFDLENBQUM7SUFDMUIsQ0FBQztJQUVEOzs7O09BSUc7SUFFSyxlQUFlO1FBQ3JCLElBQUksQ0FBQyxjQUFjLENBQUMsR0FBRyxDQUFDLElBQUksQ0FBQyxHQUFHLENBQUMsTUFBTSxDQUFBLEVBQUUsQ0FBQyxPQUFPLENBQUMsR0FBRyxDQUFDLE1BQU0sQ0FBQyxDQUFDLENBQUMsQ0FBQyxTQUFTLENBQ3ZFLE1BQU0sQ0FBQyxFQUFFO1lBQ1AsSUFBSSxDQUFDLGNBQWMsR0FBRyxJQUFJLENBQUMsT0FBTyxDQUFDLE9BQU8sRUFBRSxTQUFTLENBQUMsRUFBRSxDQUFDLEVBQUUsQ0FBQyxFQUFFLENBQUMsVUFBVSxJQUFJLE1BQU0sRUFBRSxDQUFDLENBQUMsQ0FBQyxDQUFDLElBQUksQ0FBQyxJQUFJLENBQUMsQ0FBQztZQUNwRyxPQUFPLENBQUMsR0FBRyxDQUFDLE1BQU0sQ0FBQyxDQUFDO1lBQ3BCLE9BQU8sQ0FBQyxHQUFHLENBQUMsSUFBSSxDQUFDLGNBQWMsQ0FBQyxDQUFBO1FBQ2xDLENBQUMsQ0FFRixDQUFDO1FBQ0YsUUFBUTtRQUNSLEVBQUU7UUFDRiw2REFBNkQ7UUFDN0QsdUpBQXVKO1FBQ3ZKLGdCQUFnQjtRQUNoQixzQkFBc0I7UUFDdEIsaUNBQWlDO1FBQ2pDLElBQUk7SUFDTixDQUFDOzhHQTVDVSxnQkFBZ0I7a0dBQWhCLGdCQUFnQiwrS0N6QjdCLDJ1Q0FnQ0EsOFVEbEJJLGVBQWUsMklBQ2YsYUFBYSxtTEFDYixnQkFBZ0IseVBBQ2hCLGdCQUFnQiw2VEFDaEIsVUFBVSxtT0FDVixhQUFhOzsyRkFNSixnQkFBZ0I7a0JBZDVCLFNBQVM7aUNBQ0ksSUFBSSxXQUNMO3dCQUNULGVBQWU7d0JBQ2YsYUFBYTt3QkFDYixnQkFBZ0I7d0JBQ2hCLGdCQUFnQjt3QkFDaEIsVUFBVTt3QkFDVixhQUFhO3FCQUNoQixZQUNXLGlCQUFpQjttRkFLbEIsZUFBZTtzQkFBdkIsS0FBSztnQkFDRyxhQUFhO3NCQUFyQixLQUFLO2dCQUNHLE9BQU87c0JBQWYsS0FBSyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7Q29tcG9uZW50LCBJbnB1dCwgT25Jbml0fSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmltcG9ydCB7T3B0aW9uQ29uZmlnfSBmcm9tIFwiLi9vcHRpb24uY29uZmlnXCI7XG5pbXBvcnQge01hdEJ1dHRvbk1vZHVsZX0gZnJvbSBcIkBhbmd1bGFyL21hdGVyaWFsL2J1dHRvblwiO1xuaW1wb3J0IHtNYXRUb29sYmFyTW9kdWxlfSBmcm9tIFwiQGFuZ3VsYXIvbWF0ZXJpYWwvdG9vbGJhclwiO1xuaW1wb3J0IHtNYXRJY29uTW9kdWxlfSBmcm9tIFwiQGFuZ3VsYXIvbWF0ZXJpYWwvaWNvblwiO1xuaW1wb3J0IHtNYXRUb29sdGlwTW9kdWxlfSBmcm9tIFwiQGFuZ3VsYXIvbWF0ZXJpYWwvdG9vbHRpcFwiO1xuXG5pbXBvcnQge0FjdGl2YXRlZFJvdXRlLCBSb3V0ZXIsIFJvdXRlckxpbmt9IGZyb20gXCJAYW5ndWxhci9yb3V0ZXJcIjtcbmltcG9ydCB7TWF0TWVudU1vZHVsZX0gZnJvbSBcIkBhbmd1bGFyL21hdGVyaWFsL21lbnVcIjtcbmltcG9ydCB7cGlwZSwgdGFrZSwgdGFwfSBmcm9tIFwicnhqc1wiO1xuXG5AQ29tcG9uZW50KHtcbiAgc3RhbmRhbG9uZTogdHJ1ZSxcbiAgICBpbXBvcnRzOiBbXG4gICAgTWF0QnV0dG9uTW9kdWxlLFxuICAgIE1hdEljb25Nb2R1bGUsXG4gICAgTWF0VG9vbGJhck1vZHVsZSxcbiAgICBNYXRUb29sdGlwTW9kdWxlLFxuICAgIFJvdXRlckxpbmssXG4gICAgTWF0TWVudU1vZHVsZVxuXSxcbiAgc2VsZWN0b3I6ICdjb21tb24tbmF2LW1lbnUnLFxuICB0ZW1wbGF0ZVVybDogJy4vbmF2LW1lbnUuY29tcG9uZW50Lmh0bWwnLFxuICBzdHlsZVVybHM6IFsnLi9uYXYtbWVudS5jb21wb25lbnQuY3NzJ11cbn0pXG5leHBvcnQgY2xhc3MgTmF2TWVudUNvbXBvbmVudCBpbXBsZW1lbnRzIE9uSW5pdCB7XG4gIEBJbnB1dCgpIGJhY2tncm91bmRDb2xvcjogc3RyaW5nID0gXCIjNjQ2MDY0XCI7XG4gIEBJbnB1dCgpIGNvbnRyYXN0Q29sb3I6IHN0cmluZyA9IFwid2hpdGVcIjtcbiAgQElucHV0KCkgb3B0aW9uczogT3B0aW9uQ29uZmlnID0ge29wdGlvbnM6IFtdfTtcbiAgZXhwYW5kZWQ6IGJvb2xlYW4gPSB0cnVlO1xuICBzZWxlY3RlZE9wdGlvbiA9IDA7XG5cbiAgY29uc3RydWN0b3IocHJpdmF0ZSBhY3RpdmF0ZWRSb3V0ZTogQWN0aXZhdGVkUm91dGUpIHsgfVxuXG4gIG5nT25Jbml0KCk6IHZvaWQge1xuICAgIHRoaXMuc2V0Q3VycmVudFJvdXRlKCk7XG4gIH1cblxuICB0b2dnbGVTaXplKCkge1xuICAgIHRoaXMuZXhwYW5kZWQgPSAhdGhpcy5leHBhbmRlZDtcbiAgfVxuXG4gIHNlbGVjdChpOiBudW1iZXIpIHtcbiAgICB0aGlzLnNlbGVjdGVkT3B0aW9uID0gaTtcbiAgfVxuXG4gIC8qKlxuICAgKiBTZXRzIHRoZSBtZW51IHRvIGNvcnJlc3BvbmQgdG8gdGhlIGN1cnJlbnQgcm91dGUuXG4gICAqIFdoZW4gdGhlIHVzZXIgcmVsb2FkcyB0aGUgYXBwIGZyb20gYSBwYWdlIGRpZmZlcmVudCBmcm9tIGhvbWUsIHdlIHdhbnQgdG8gc2VsZWN0IHRoZSBtZW51IGl0ZW0gY29ycmVzcG9uZGluZyB0byB0aGUgY3VycmVudCByb3V0ZS5cbiAgICogQHByaXZhdGVcbiAgICovXG5cbiAgcHJpdmF0ZSBzZXRDdXJyZW50Um91dGUoKSB7XG4gICAgdGhpcy5hY3RpdmF0ZWRSb3V0ZS51cmwucGlwZSh0YXAocmVzdWx0PT4gY29uc29sZS5sb2cocmVzdWx0KSkpLnN1YnNjcmliZShcbiAgICAgIHJlc3VsdCA9PiB7XG4gICAgICAgIHRoaXMuc2VsZWN0ZWRPcHRpb24gPSB0aGlzLm9wdGlvbnMub3B0aW9ucz8uZmluZEluZGV4KGVsID0+IGVsLnJvdXRlckxpbmsgPT0gcmVzdWx0Py5bMF0ucGF0aCkgfHwgMDtcbiAgICAgICAgY29uc29sZS5sb2cocmVzdWx0KTtcbiAgICAgICAgY29uc29sZS5sb2codGhpcy5zZWxlY3RlZE9wdGlvbilcbiAgICAgIH1cblxuICAgICk7XG4gICAgLy8gdHJ5IHtcbiAgICAvL1xuICAgIC8vICAgY29uc3QgY3VycmVudFJvdXRlID0gdGhpcy5nZXRNb2R1bGVVcmwodGhpcy5yb3V0ZXIudXJsKTtcbiAgICAvLyAgIHRoaXMuc2VsZWN0ZWRPcHRpb24gPSB0aGlzLm9wdGlvbnMub3B0aW9ucz8uZmluZEluZGV4KGVsID0+IGVsLnJvdXRlckxpbmsgPT0gY3VycmVudFJvdXRlKSB8fCAwOyAvLyBhc3N1bWUgdGhhdCB0aGUgZmlyc3QgaXRlbSBvZiB0aGUgbWVudSBpcyBIb21lXG4gICAgLy8gfSBjYXRjaCAoZSkge1xuICAgIC8vICAgY29uc29sZS5lcnJvcihlKTtcbiAgICAvLyAgIHRoaXMucm91dGVyLm5hdmlnYXRlKFsnLyddKTtcbiAgICAvLyB9XG4gIH1cblxuXG4gIC8vIHByaXZhdGUgZ2V0TW9kdWxlVXJsKGlucHV0U3RyaW5nKSB7XG4gIC8vICAgY29uc3QgZmlyc3RTbGFzaEluZGV4ID0gaW5wdXRTdHJpbmcuaW5kZXhPZignLycpO1xuICAvLyAgIGlmIChmaXJzdFNsYXNoSW5kZXggPT09IC0xKSB7XG4gIC8vICAgICByZXR1cm4gJyc7XG4gIC8vICAgfVxuICAvLyAgIGNvbnN0IHNlY29uZFNsYXNoSW5kZXggPSBpbnB1dFN0cmluZy5pbmRleE9mKCcvJywgZmlyc3RTbGFzaEluZGV4ICsgMSk7XG4gIC8vICAgaWYgKHNlY29uZFNsYXNoSW5kZXggPT09IC0xKSB7XG4gIC8vICAgICByZXR1cm4gaW5wdXRTdHJpbmcuc3Vic3RyaW5nKGZpcnN0U2xhc2hJbmRleCArIDEpOyAvLyBFeHRyYWN0IGV2ZXJ5dGhpbmcgYWZ0ZXIgdGhlIGZpcnN0IHNsYXNoXG4gIC8vICAgfSBlbHNlIHtcbiAgLy8gICAgIHJldHVybiBpbnB1dFN0cmluZy5zdWJzdHJpbmcoZmlyc3RTbGFzaEluZGV4ICsgMSwgc2Vjb25kU2xhc2hJbmRleCk7IC8vIEV4dHJhY3QgdGhlIHN1YnN0cmluZyBiZXR3ZWVuIHRoZSBzbGFzaGVzXG4gIC8vICAgfVxuICAvLyB9XG5cbn1cbiIsIjxkaXYgY2xhc3M9XCJtZW51LXdyYXBwZXJcIiBbc3R5bGUuYmFja2dyb3VuZC1jb2xvcl09XCJiYWNrZ3JvdW5kQ29sb3JcIiBbc3R5bGUud2lkdGhdPVwiZXhwYW5kZWQgPyAnMTAwcHgnIDogJzUwcHgnXCI+XG4gIDxtYXQtdG9vbGJhciBjb2xvcj1wcmltYXJ5PlxuICAgIDxtYXQtdG9vbGJhci1yb3cgW3N0eWxlLmJhY2tncm91bmQtY29sb3JdPVwiYmFja2dyb3VuZENvbG9yXCIgW3N0eWxlLnBhZGRpbmddPVwiJzAgMCAwIDAnXCI+XG4gICAgICA8ZGl2IGNsYXNzPVwibWVudS1idXR0b24td3JhcHBlclwiPlxuICAgICAgICA8YnV0dG9uIG1hdC1pY29uLWJ1dHRvbiBhcmlhLWxhYmVsPVwiTWVudVwiIChjbGljayk9XCJ0b2dnbGVTaXplKClcIj5cbiAgICAgICAgICA8bWF0LWljb24+bWVudTwvbWF0LWljb24+XG4gICAgICAgIDwvYnV0dG9uPlxuICAgICAgPC9kaXY+XG4gICAgPC9tYXQtdG9vbGJhci1yb3c+XG4gIDwvbWF0LXRvb2xiYXI+XG5cbiAgPGRpdiBjbGFzcz1cInZlcnRpY2FsLXNwYWNlclwiPjwvZGl2PlxuXG4gIEBmb3IgKGl0ZW0gb2Ygb3B0aW9ucy5vcHRpb25zOyB0cmFjayBpdGVtOyBsZXQgaSA9ICRpbmRleCkge1xuICAgIDxkaXYgY2xhc3M9XCJvcHRpb24td3JhcHBlclwiXG4gICAgICBbc3R5bGUuYmFja2dyb3VuZC1jb2xvcl09XCJpID09PSBzZWxlY3RlZE9wdGlvbiA/IGNvbnRyYXN0Q29sb3IgOiBiYWNrZ3JvdW5kQ29sb3IgXCJcbiAgICAgIFtzdHlsZS5jb2xvcl09XCJpID09PSBzZWxlY3RlZE9wdGlvbiA/ICBiYWNrZ3JvdW5kQ29sb3IgOiBjb250cmFzdENvbG9yXCJcbiAgICAgIChjbGljayk9XCJzZWxlY3QoaSlcIlxuICAgICAgbWF0VG9vbHRpcD1cInt7aXRlbS5sYWJlbH19XCJcbiAgICAgIG1hdFRvb2x0aXBQb3NpdGlvbj1cImFmdGVyXCJcbiAgICAgIFttYXRUb29sdGlwRGlzYWJsZWRdPVwiZXhwYW5kZWRcIlxuICAgICAgW3JvdXRlckxpbmtdPVwiaXRlbS5yb3V0ZXJMaW5rXCJcbiAgICAgID5cbiAgICAgIDxtYXQtaWNvbiBbY2xhc3NdPVwiZXhwYW5kZWQ/ICdzY2FsZWQtaWNvbicgOiAnc21hbGwtaWNvbidcIiBzdmdJY29uPVwie3tpdGVtLmljb25OYW1lfX1cIj5cbiAgICAgIDwvbWF0LWljb24+XG4gICAgICA8YnI+XG4gICAgICAgIEBpZiAoZXhwYW5kZWQpIHtcbiAgICAgICAgICA8c3BhbiBjbGFzcz1cImljb24tbGFiZWwtbGFyZ2VcIj57e2l0ZW0ubGFiZWx9fTwvc3Bhbj5cbiAgICAgICAgfVxuICAgICAgPC9kaXY+XG4gICAgfVxuICA8L2Rpdj5cbiJdfQ==