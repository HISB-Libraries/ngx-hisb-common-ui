import { Component, Inject } from '@angular/core';
import { MAT_DIALOG_DATA, MatDialogConfig, MatDialogModule } from "@angular/material/dialog";
import { MatButtonModule } from "@angular/material/button";
import * as i0 from "@angular/core";
import * as i1 from "@angular/material/dialog";
import * as i2 from "@angular/material/button";
export class ConformationDialogComponent {
    constructor(dialogRef, dialogData) {
        this.dialogRef = dialogRef;
        this.dialogData = dialogData;
        this.data = {};
    }
    onSecondaryClick() {
        this.dialogRef.close('secondaryAction');
    }
    onDefaultClick() {
        this.dialogRef.close('primaryAction');
    }
    ngOnInit() {
        this.data.title = this.dialogData.title ?? "";
        this.data.content = this.dialogData.content ?? "Do you want to continue?";
        this.data.primaryActionBtnTitle = this.dialogData.primaryActionBtnTitle ?? "Yes";
        this.data.secondaryActionBtnTitle = this.dialogData.secondaryActionBtnTitle ?? "No";
        this.data.width = this.dialogData.width ?? '4em';
        this.data.height = this.dialogData.width ?? '4em';
        this.data.isPrimaryButtonLeft = this.dialogData.isPrimaryButtonLeft ?? false;
    }
    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "18.0.0", ngImport: i0, type: ConformationDialogComponent, deps: [{ token: i1.MatDialogRef }, { token: MAT_DIALOG_DATA }], target: i0.ɵɵFactoryTarget.Component }); }
    static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "17.0.0", version: "18.0.0", type: ConformationDialogComponent, isStandalone: true, selector: "lib-confirmation-dialog", ngImport: i0, template: "<h1 mat-dialog-title>{{data.title}}</h1>\n<div mat-dialog-content>\n  <span [innerHTML]=\"data.content\"></span>\n</div>\n<div mat-dialog-actions align=\"end\">\n  @if (!data.isPrimaryButtonLeft) {\n      <button mat-stroked-button (click)=\"onSecondaryClick()\">{{data.secondaryActionBtnTitle}}</button>\n      <button mat-stroked-button color=\"primary\" (click)=\"onDefaultClick()\" cdkFocusInitial>{{data.primaryActionBtnTitle}}</button>\n  }\n  @if (data.isPrimaryButtonLeft) {\n      <button mat-stroked-button  (click)=\"onDefaultClick()\" cdkFocusInitial>{{data.primaryActionBtnTitle}}</button>\n      <button mat-stroked-button (click)=\"onSecondaryClick()\">{{data.secondaryActionBtnTitle}}</button>\n  }\n</div>\n", styles: [""], dependencies: [{ kind: "ngmodule", type: MatDialogModule }, { kind: "directive", type: i1.MatDialogTitle, selector: "[mat-dialog-title], [matDialogTitle]", inputs: ["id"], exportAs: ["matDialogTitle"] }, { kind: "directive", type: i1.MatDialogActions, selector: "[mat-dialog-actions], mat-dialog-actions, [matDialogActions]", inputs: ["align"] }, { kind: "directive", type: i1.MatDialogContent, selector: "[mat-dialog-content], mat-dialog-content, [matDialogContent]" }, { kind: "ngmodule", type: MatButtonModule }, { kind: "component", type: i2.MatButton, selector: "    button[mat-button], button[mat-raised-button], button[mat-flat-button],    button[mat-stroked-button]  ", exportAs: ["matButton"] }] }); }
}
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "18.0.0", ngImport: i0, type: ConformationDialogComponent, decorators: [{
            type: Component,
            args: [{ selector: 'lib-confirmation-dialog', standalone: true, imports: [
                        MatDialogModule,
                        MatButtonModule
                    ], template: "<h1 mat-dialog-title>{{data.title}}</h1>\n<div mat-dialog-content>\n  <span [innerHTML]=\"data.content\"></span>\n</div>\n<div mat-dialog-actions align=\"end\">\n  @if (!data.isPrimaryButtonLeft) {\n      <button mat-stroked-button (click)=\"onSecondaryClick()\">{{data.secondaryActionBtnTitle}}</button>\n      <button mat-stroked-button color=\"primary\" (click)=\"onDefaultClick()\" cdkFocusInitial>{{data.primaryActionBtnTitle}}</button>\n  }\n  @if (data.isPrimaryButtonLeft) {\n      <button mat-stroked-button  (click)=\"onDefaultClick()\" cdkFocusInitial>{{data.primaryActionBtnTitle}}</button>\n      <button mat-stroked-button (click)=\"onSecondaryClick()\">{{data.secondaryActionBtnTitle}}</button>\n  }\n</div>\n" }]
        }], ctorParameters: () => [{ type: i1.MatDialogRef }, { type: undefined, decorators: [{
                    type: Inject,
                    args: [MAT_DIALOG_DATA]
                }] }] });
export function openConfirmationDialog(dialog, dialogData) {
    const config = new MatDialogConfig();
    config.autoFocus = true;
    config.width = dialogData?.width;
    config.height = dialogData?.height;
    config.data = {
        ...dialogData
    };
    const dialogRef = dialog.open(ConformationDialogComponent, config);
    return dialogRef.afterClosed();
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY29uZm9ybWF0aW9uLWRpYWxvZy5jb21wb25lbnQuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi8uLi8uLi9wcm9qZWN0cy9uZ3gtaGlzYi1jb21tb24tdWkvc3JjL2xpYi9kaWFsb2cvY29uZmlybWF0aW9uLWRpYWxvZy9jb25mb3JtYXRpb24tZGlhbG9nLmNvbXBvbmVudC50cyIsIi4uLy4uLy4uLy4uLy4uLy4uL3Byb2plY3RzL25neC1oaXNiLWNvbW1vbi11aS9zcmMvbGliL2RpYWxvZy9jb25maXJtYXRpb24tZGlhbG9nL2NvbmZpcm1hdGlvbi1kaWFsb2cuY29tcG9uZW50Lmh0bWwiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsT0FBTyxFQUFFLFNBQVMsRUFBRSxNQUFNLEVBQVUsTUFBTSxlQUFlLENBQUM7QUFDMUQsT0FBTyxFQUFDLGVBQWUsRUFBYSxlQUFlLEVBQUUsZUFBZSxFQUFlLE1BQU0sMEJBQTBCLENBQUM7QUFDcEgsT0FBTyxFQUFDLGVBQWUsRUFBQyxNQUFNLDBCQUEwQixDQUFDOzs7O0FBYXpELE1BQU0sT0FBTywyQkFBMkI7SUFJdEMsWUFDVSxTQUE0QixFQUNILFVBQXNCO1FBRC9DLGNBQVMsR0FBVCxTQUFTLENBQW1CO1FBQ0gsZUFBVSxHQUFWLFVBQVUsQ0FBWTtRQUp6RCxTQUFJLEdBQWUsRUFBRSxDQUFDO0lBTXRCLENBQUM7SUFFRCxnQkFBZ0I7UUFDZCxJQUFJLENBQUMsU0FBUyxDQUFDLEtBQUssQ0FBQyxpQkFBaUIsQ0FBQyxDQUFDO0lBQzFDLENBQUM7SUFFRCxjQUFjO1FBQ1osSUFBSSxDQUFDLFNBQVMsQ0FBQyxLQUFLLENBQUMsZUFBZSxDQUFDLENBQUM7SUFDeEMsQ0FBQztJQUVELFFBQVE7UUFDTixJQUFJLENBQUMsSUFBSSxDQUFDLEtBQUssR0FBRyxJQUFJLENBQUMsVUFBVSxDQUFDLEtBQUssSUFBSSxFQUFFLENBQUM7UUFDOUMsSUFBSSxDQUFDLElBQUksQ0FBQyxPQUFPLEdBQUcsSUFBSSxDQUFDLFVBQVUsQ0FBQyxPQUFPLElBQUksMEJBQTBCLENBQUM7UUFDMUUsSUFBSSxDQUFDLElBQUksQ0FBQyxxQkFBcUIsR0FBRyxJQUFJLENBQUMsVUFBVSxDQUFDLHFCQUFxQixJQUFJLEtBQUssQ0FBQztRQUNqRixJQUFJLENBQUMsSUFBSSxDQUFDLHVCQUF1QixHQUFHLElBQUksQ0FBQyxVQUFVLENBQUMsdUJBQXVCLElBQUksSUFBSSxDQUFDO1FBQ3BGLElBQUksQ0FBQyxJQUFJLENBQUMsS0FBSyxHQUFHLElBQUksQ0FBQyxVQUFVLENBQUMsS0FBSyxJQUFJLEtBQUssQ0FBQztRQUNqRCxJQUFJLENBQUMsSUFBSSxDQUFDLE1BQU0sR0FBRyxJQUFJLENBQUMsVUFBVSxDQUFDLEtBQUssSUFBSSxLQUFLLENBQUM7UUFDbEQsSUFBSSxDQUFDLElBQUksQ0FBQyxtQkFBbUIsR0FBRyxJQUFJLENBQUMsVUFBVSxDQUFDLG1CQUFtQixJQUFJLEtBQUssQ0FBQztJQUMvRSxDQUFDOzhHQTFCVSwyQkFBMkIsOENBTTVCLGVBQWU7a0dBTmQsMkJBQTJCLG1GQ2Z4QyxzdEJBY0EseURESEksZUFBZSx5YkFDZixlQUFlOzsyRkFHTiwyQkFBMkI7a0JBVnZDLFNBQVM7K0JBQ0UseUJBQXlCLGNBR3ZCLElBQUksV0FDUDt3QkFDUCxlQUFlO3dCQUNmLGVBQWU7cUJBQ2xCOzswQkFRSSxNQUFNOzJCQUFDLGVBQWU7O0FBdUIzQixNQUFNLFVBQVUsc0JBQXNCLENBQUMsTUFBaUIsRUFBRSxVQUF1QjtJQUUvRSxNQUFNLE1BQU0sR0FBRyxJQUFJLGVBQWUsRUFBRSxDQUFDO0lBRXJDLE1BQU0sQ0FBQyxTQUFTLEdBQUcsSUFBSSxDQUFDO0lBQ3hCLE1BQU0sQ0FBQyxLQUFLLEdBQUcsVUFBVSxFQUFFLEtBQUssQ0FBQTtJQUNoQyxNQUFNLENBQUMsTUFBTSxHQUFHLFVBQVUsRUFBRSxNQUFNLENBQUM7SUFFbkMsTUFBTSxDQUFDLElBQUksR0FBRztRQUNaLEdBQUcsVUFBVTtLQUNkLENBQUE7SUFFRCxNQUFNLFNBQVMsR0FBRyxNQUFNLENBQUMsSUFBSSxDQUFDLDJCQUEyQixFQUFFLE1BQU0sQ0FBQyxDQUFDO0lBRW5FLE9BQU8sU0FBUyxDQUFDLFdBQVcsRUFBRSxDQUFDO0FBQ2pDLENBQUMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBDb21wb25lbnQsIEluamVjdCwgT25Jbml0IH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5pbXBvcnQge01BVF9ESUFMT0dfREFUQSwgTWF0RGlhbG9nLCBNYXREaWFsb2dDb25maWcsIE1hdERpYWxvZ01vZHVsZSwgTWF0RGlhbG9nUmVmfSBmcm9tIFwiQGFuZ3VsYXIvbWF0ZXJpYWwvZGlhbG9nXCI7XG5pbXBvcnQge01hdEJ1dHRvbk1vZHVsZX0gZnJvbSBcIkBhbmd1bGFyL21hdGVyaWFsL2J1dHRvblwiO1xuaW1wb3J0IHtEaWFsb2dEYXRhfSBmcm9tIFwiLi4vZG9tYWluL2RpYWxvZy1kYXRhXCI7XG5cbkBDb21wb25lbnQoe1xuICBzZWxlY3RvcjogJ2xpYi1jb25maXJtYXRpb24tZGlhbG9nJyxcbiAgdGVtcGxhdGVVcmw6ICcuL2NvbmZpcm1hdGlvbi1kaWFsb2cuY29tcG9uZW50Lmh0bWwnLFxuICBzdHlsZVVybHM6IFsnLi9jb25maXJtYXRpb24tZGlhbG9nLmNvbXBvbmVudC5jc3MnXSxcbiAgc3RhbmRhbG9uZTogdHJ1ZSxcbiAgaW1wb3J0czogW1xuICAgIE1hdERpYWxvZ01vZHVsZSxcbiAgICBNYXRCdXR0b25Nb2R1bGVcbl1cbn0pXG5leHBvcnQgY2xhc3MgQ29uZm9ybWF0aW9uRGlhbG9nQ29tcG9uZW50IGltcGxlbWVudHMgT25Jbml0IHtcblxuICBkYXRhOiBEaWFsb2dEYXRhID0ge307XG5cbiAgY29uc3RydWN0b3IoXG4gICAgcHJpdmF0ZSBkaWFsb2dSZWY6IE1hdERpYWxvZ1JlZjxhbnk+LFxuICAgIEBJbmplY3QoTUFUX0RJQUxPR19EQVRBKSBwcml2YXRlIGRpYWxvZ0RhdGE6IERpYWxvZ0RhdGFcbiAgKSB7XG4gIH1cblxuICBvblNlY29uZGFyeUNsaWNrKCkge1xuICAgIHRoaXMuZGlhbG9nUmVmLmNsb3NlKCdzZWNvbmRhcnlBY3Rpb24nKTtcbiAgfVxuXG4gIG9uRGVmYXVsdENsaWNrKCkge1xuICAgIHRoaXMuZGlhbG9nUmVmLmNsb3NlKCdwcmltYXJ5QWN0aW9uJyk7XG4gIH1cblxuICBuZ09uSW5pdCgpOiB2b2lkIHtcbiAgICB0aGlzLmRhdGEudGl0bGUgPSB0aGlzLmRpYWxvZ0RhdGEudGl0bGUgPz8gXCJcIjtcbiAgICB0aGlzLmRhdGEuY29udGVudCA9IHRoaXMuZGlhbG9nRGF0YS5jb250ZW50ID8/IFwiRG8geW91IHdhbnQgdG8gY29udGludWU/XCI7XG4gICAgdGhpcy5kYXRhLnByaW1hcnlBY3Rpb25CdG5UaXRsZSA9IHRoaXMuZGlhbG9nRGF0YS5wcmltYXJ5QWN0aW9uQnRuVGl0bGUgPz8gXCJZZXNcIjtcbiAgICB0aGlzLmRhdGEuc2Vjb25kYXJ5QWN0aW9uQnRuVGl0bGUgPSB0aGlzLmRpYWxvZ0RhdGEuc2Vjb25kYXJ5QWN0aW9uQnRuVGl0bGUgPz8gXCJOb1wiO1xuICAgIHRoaXMuZGF0YS53aWR0aCA9IHRoaXMuZGlhbG9nRGF0YS53aWR0aCA/PyAnNGVtJztcbiAgICB0aGlzLmRhdGEuaGVpZ2h0ID0gdGhpcy5kaWFsb2dEYXRhLndpZHRoID8/ICc0ZW0nO1xuICAgIHRoaXMuZGF0YS5pc1ByaW1hcnlCdXR0b25MZWZ0ID0gdGhpcy5kaWFsb2dEYXRhLmlzUHJpbWFyeUJ1dHRvbkxlZnQgPz8gZmFsc2U7XG4gIH1cbn1cblxuZXhwb3J0IGZ1bmN0aW9uIG9wZW5Db25maXJtYXRpb25EaWFsb2coZGlhbG9nOiBNYXREaWFsb2csIGRpYWxvZ0RhdGE/OiBEaWFsb2dEYXRhKSB7XG5cbiAgY29uc3QgY29uZmlnID0gbmV3IE1hdERpYWxvZ0NvbmZpZygpO1xuXG4gIGNvbmZpZy5hdXRvRm9jdXMgPSB0cnVlO1xuICBjb25maWcud2lkdGggPSBkaWFsb2dEYXRhPy53aWR0aFxuICBjb25maWcuaGVpZ2h0ID0gZGlhbG9nRGF0YT8uaGVpZ2h0O1xuXG4gIGNvbmZpZy5kYXRhID0ge1xuICAgIC4uLmRpYWxvZ0RhdGFcbiAgfVxuXG4gIGNvbnN0IGRpYWxvZ1JlZiA9IGRpYWxvZy5vcGVuKENvbmZvcm1hdGlvbkRpYWxvZ0NvbXBvbmVudCwgY29uZmlnKTtcblxuICByZXR1cm4gZGlhbG9nUmVmLmFmdGVyQ2xvc2VkKCk7XG59XG4iLCI8aDEgbWF0LWRpYWxvZy10aXRsZT57e2RhdGEudGl0bGV9fTwvaDE+XG48ZGl2IG1hdC1kaWFsb2ctY29udGVudD5cbiAgPHNwYW4gW2lubmVySFRNTF09XCJkYXRhLmNvbnRlbnRcIj48L3NwYW4+XG48L2Rpdj5cbjxkaXYgbWF0LWRpYWxvZy1hY3Rpb25zIGFsaWduPVwiZW5kXCI+XG4gIEBpZiAoIWRhdGEuaXNQcmltYXJ5QnV0dG9uTGVmdCkge1xuICAgICAgPGJ1dHRvbiBtYXQtc3Ryb2tlZC1idXR0b24gKGNsaWNrKT1cIm9uU2Vjb25kYXJ5Q2xpY2soKVwiPnt7ZGF0YS5zZWNvbmRhcnlBY3Rpb25CdG5UaXRsZX19PC9idXR0b24+XG4gICAgICA8YnV0dG9uIG1hdC1zdHJva2VkLWJ1dHRvbiBjb2xvcj1cInByaW1hcnlcIiAoY2xpY2spPVwib25EZWZhdWx0Q2xpY2soKVwiIGNka0ZvY3VzSW5pdGlhbD57e2RhdGEucHJpbWFyeUFjdGlvbkJ0blRpdGxlfX08L2J1dHRvbj5cbiAgfVxuICBAaWYgKGRhdGEuaXNQcmltYXJ5QnV0dG9uTGVmdCkge1xuICAgICAgPGJ1dHRvbiBtYXQtc3Ryb2tlZC1idXR0b24gIChjbGljayk9XCJvbkRlZmF1bHRDbGljaygpXCIgY2RrRm9jdXNJbml0aWFsPnt7ZGF0YS5wcmltYXJ5QWN0aW9uQnRuVGl0bGV9fTwvYnV0dG9uPlxuICAgICAgPGJ1dHRvbiBtYXQtc3Ryb2tlZC1idXR0b24gKGNsaWNrKT1cIm9uU2Vjb25kYXJ5Q2xpY2soKVwiPnt7ZGF0YS5zZWNvbmRhcnlBY3Rpb25CdG5UaXRsZX19PC9idXR0b24+XG4gIH1cbjwvZGl2PlxuIl19