{"version":3,"file":"ngx-hisb-common-ui.mjs","sources":["../../../projects/ngx-hisb-common-ui/src/lib/ngx-hisb-common-ui.module.ts","../../../projects/ngx-hisb-common-ui/src/lib/header/header.component.ts","../../../projects/ngx-hisb-common-ui/src/lib/header/header.component.html","../../../projects/ngx-hisb-common-ui/src/lib/nav-menu/nav-menu.component.ts","../../../projects/ngx-hisb-common-ui/src/lib/nav-menu/nav-menu.component.html","../../../projects/ngx-hisb-common-ui/src/lib/dialog/confirmation-dialog/conformation-dialog.component.ts","../../../projects/ngx-hisb-common-ui/src/lib/dialog/confirmation-dialog/confirmation-dialog.component.html","../../../projects/ngx-hisb-common-ui/src/lib/dialog/text-input-dialog/text-input-dialog.component.ts","../../../projects/ngx-hisb-common-ui/src/lib/dialog/text-input-dialog/text-input-dialog.component.html","../../../projects/ngx-hisb-common-ui/src/lib/common-error/common-error.component.ts","../../../projects/ngx-hisb-common-ui/src/lib/common-error/common-error.component.html","../../../projects/ngx-hisb-common-ui/src/public-api.ts","../../../projects/ngx-hisb-common-ui/src/ngx-hisb-common-ui.ts"],"sourcesContent":["import { NgModule } from '@angular/core';\nimport {RouterLink} from \"@angular/router\";\nimport {NgIf} from \"@angular/common\";\nimport {BrowserAnimationsModule} from \"@angular/platform-browser/animations\";\n\n\n@NgModule({\n  imports: [\n    RouterLink,\n    NgIf,\n    BrowserAnimationsModule,\n  ],\n})\nexport class NgxHisbCommonUiModule { }\n","import {Component, Input, OnInit} from '@angular/core';\nimport {HeaderConfig} from \"./header.config\";\nimport {MatButtonModule} from \"@angular/material/button\";\nimport {MatToolbarModule} from \"@angular/material/toolbar\";\nimport {MatIconModule} from \"@angular/material/icon\";\n\nimport {MatMenuModule} from \"@angular/material/menu\";\nimport {RouterLink} from \"@angular/router\";\nimport {MatDividerModule} from \"@angular/material/divider\";\nimport {BrowserModule} from \"@angular/platform-browser\";\n\n@Component({\n  imports: [\n    MatButtonModule,\n    MatToolbarModule,\n    MatIconModule,\n    MatMenuModule,\n    RouterLink,\n    MatDividerModule,\n    BrowserModule\n  ],\n  selector: 'common-header',\n  styleUrls: ['./header.component.css'],\n  standalone: true,\n  templateUrl: 'header.component.html'\n})\nexport class HeaderComponent implements OnInit {\n  @Input() configuration: HeaderConfig | undefined;\n  @Input() title: string = \"\";\n  @Input() version: string = \"\";\n  @Input() subtitle: string = \"\";\n  @Input() splitSubtitleEvenly: boolean = false;\n  @Input() showUserManagement: boolean = false;\n  @Input() backgroundColor: string = \"#646064\";\n  subtitleInsert: any = undefined;\n\n  constructor() {}\n\n  ngOnInit(): void {\n    if (this.splitSubtitleEvenly) {\n      this.subtitleInsert = this.splitSubtitle(this.subtitle);\n    }\n    else {\n      this.subtitleInsert = this.subtitle;\n    }\n  }\n\n  private splitSubtitle(subtitle: string): string {\n    const subtitleWordList = subtitle.split(\" \");\n    const halfLength = Math.floor(subtitleWordList.length / 2);\n    let recombinedSubtitle = \"\";\n    subtitleWordList.map((word, i) => {\n      recombinedSubtitle += word + \" \";\n      if (i == halfLength) {\n        recombinedSubtitle += \"<br>\";\n      }\n    });\n    return recombinedSubtitle\n  }\n\n  openLink(link: string | undefined) {\n    if (link) window.open(link,'_blank');\n  }\n}\n","<mat-toolbar class=\"header\">\n\n  <mat-toolbar-row [style.background-color]=\"backgroundColor\">\n    <div class=\"title\" [routerLink]=\"'/'\" [style.cursor]=\"'pointer'\">{{ title }}</div>\n\n    <div class=\"subtitle\">\n      <p [innerHTML]=\"subtitleInsert\">\n      </p>\n    </div>\n\n    <div class=\"content-spacer\"></div>\n    @if (version) {\n      <div class=\"version-label\">\n        Version: {{ version }}\n      </div>\n    }\n    @if (configuration?.menuItem) {\n      <div>\n        <button mat-icon-button [matMenuTriggerFor]=\"menu\" aria-label=\"Menu\">\n          <mat-icon>more_vert</mat-icon>\n        </button>\n      </div>\n    }\n    <div>\n      @if (showUserManagement) {\n        <button mat-icon-button aria-label=\"User Management\">\n          <mat-icon>account_circle</mat-icon>\n        </button>\n      }\n    </div>\n  </mat-toolbar-row>\n\n  <mat-menu #menu=\"matMenu\">\n    @for (item of configuration?.menuItem; track item) {\n\n      @if (item.divider) {\n        <mat-divider></mat-divider>\n      }\n      @if (!item.divider) {\n        <button mat-menu-item (click)=\"openLink(item.link)\">\n          <span>{{ item.label }}</span>\n        </button>\n      }\n\n    }\n  </mat-menu>\n</mat-toolbar>\n\n\n\n<!--&lt;!&ndash; Add links to major features as they are implemented here. &ndash;&gt;-->\n\n\n\n\n<!--<mat-menu #menu=\"matMenu\">-->\n<!--  <button mat-menu-item onclick=\"window.open('https://ravendocs.readthedocs.io/en/latest/','_blank')\">-->\n<!--    <span>Documentation</span>-->\n<!--  </button>-->\n<!--  <button mat-menu-item onclick=\"window.open('https://github.com/MortalityReporting','_blank')\">-->\n<!--    <span>Mortality Reporting GitHub</span>-->\n<!--  </button>-->\n<!--  <mat-divider></mat-divider>-->\n<!--  <button mat-menu-item onclick=\"window.open('https://chat.fhir.org','_blank')\">-->\n<!--    <span>FHIR Zulip Chat</span>-->\n<!--  </button>-->\n<!--</mat-menu>-->\n\n","import {Component, Input, OnChanges, SimpleChanges} from '@angular/core';\r\nimport {OptionConfig} from \"./option.config\";\r\nimport {MatButtonModule} from \"@angular/material/button\";\r\nimport {MatToolbarModule} from \"@angular/material/toolbar\";\r\nimport {MatIconModule} from \"@angular/material/icon\";\r\nimport {MatTooltipModule} from \"@angular/material/tooltip\";\r\n\r\nimport {NavigationEnd, Router, RouterLink} from \"@angular/router\";\r\nimport {MatMenuModule} from \"@angular/material/menu\";\r\nimport {BehaviorSubject, filter, take} from \"rxjs\";\r\n\r\n\r\n@Component({\r\n  imports: [\r\n    MatButtonModule,\r\n    MatIconModule,\r\n    MatToolbarModule,\r\n    MatTooltipModule,\r\n    RouterLink,\r\n    MatMenuModule\r\n  ],\r\n  selector: 'common-nav-menu',\r\n  templateUrl: './nav-menu.component.html',\r\n  standalone: true,\r\n  styleUrls: ['./nav-menu.component.css']\r\n})\r\nexport class NavMenuComponent implements  OnChanges{\r\n  @Input() backgroundColor: string = \"#646064\";\r\n  @Input() contrastColor: string = \"white\";\r\n  @Input() options: OptionConfig = {options: []};\r\n  currentRoute: string; //We only use this variable to store the current route, it is set in the constructor and user in the ngAfterInit\r\n\r\n  expanded: boolean = true;\r\n  selectedOption = 0;\r\n\r\n  private currentRouteStr = new BehaviorSubject<string>('');\r\n  currentRouteStr$ = this.currentRouteStr.asObservable();\r\n\r\n\r\n  constructor(private router: Router) {\r\n    // To grab the router events immediately we need to subscribe to them in the constructor\r\n    this.setNavMenuInitialRoute();\r\n  }\r\n\r\n  toggleSize() {\r\n    this.expanded = !this.expanded;\r\n  }\r\n\r\n  select(i: number) {\r\n    this.selectedOption = i;\r\n  }\r\n\r\n  private setNavMenuInitialRoute(){\r\n    this.router.events.pipe(\r\n      filter(e => e instanceof NavigationEnd),\r\n      take(1),\r\n    ).subscribe(event => {\r\n      if(event?.['url']){\r\n        this.currentRoute = this.extractPath(event?.['url']);\r\n        this.currentRouteStr.next(this.currentRoute);\r\n      }\r\n    })\r\n  }\r\n\r\n  /**\r\n   * We use this function to extract the current path from the current url\r\n   * @param inputString\r\n   * @private\r\n   */\r\n  private extractPath(inputString: string) {\r\n    const firstSlashIndex = inputString.indexOf('/');\r\n\r\n    if (firstSlashIndex === -1) {\r\n      return '';\r\n    }\r\n\r\n    const secondSlashIndex = inputString.indexOf('/', firstSlashIndex + 1);\r\n\r\n    if (secondSlashIndex === -1) {\r\n      return inputString.substring(firstSlashIndex + 1);\r\n    } else {\r\n      return inputString.substring(firstSlashIndex + 1, secondSlashIndex);\r\n    }\r\n  }\r\n\r\n  ngOnChanges(changes: SimpleChanges): void {\r\n    if(changes['options'].currentValue){\r\n      this.currentRouteStr$.subscribe( currentRoute =>{\r\n        const index = this.options.options.findIndex(option=> option.routerLink ==currentRoute)\r\n        if(index >= 0 ){\r\n          this.selectedOption = index\r\n        }})\r\n    }\r\n  }\r\n\r\n}\r\n","<div class=\"menu-wrapper\" [style.background-color]=\"backgroundColor\" [style.width]=\"expanded ? '100px' : '50px'\">\n  <mat-toolbar color=primary>\n    <mat-toolbar-row [style.background-color]=\"backgroundColor\" [style.padding]=\"'0 0 0 0'\">\n      <div class=\"menu-button-wrapper\">\n        <button mat-icon-button aria-label=\"Menu\" (click)=\"toggleSize()\">\n          <mat-icon>menu</mat-icon>\n        </button>\n      </div>\n    </mat-toolbar-row>\n  </mat-toolbar>\n\n  <div class=\"vertical-spacer\"></div>\n\n  @for (item of options.options; track item; let i = $index) {\n    <div class=\"option-wrapper\"\n      [style.background-color]=\"i === selectedOption ? contrastColor : backgroundColor \"\n      [style.color]=\"i === selectedOption ?  backgroundColor : contrastColor\"\n      (click)=\"select(i)\"\n      matTooltip=\"{{item.label}}\"\n      matTooltipPosition=\"after\"\n      [matTooltipDisabled]=\"expanded\"\n      [routerLink]=\"item.routerLink\"\n      >\n      <mat-icon [class]=\"expanded? 'scaled-icon' : 'small-icon'\" svgIcon=\"{{item.iconName}}\">\n      </mat-icon>\n      <br>\n        @if (expanded) {\n          <span class=\"icon-label-large\">{{item.label}}</span>\n        }\n      </div>\n    }\n  </div>\n","import { Component, Inject, OnInit } from '@angular/core';\nimport {MAT_DIALOG_DATA, MatDialog, MatDialogConfig, MatDialogModule, MatDialogRef} from \"@angular/material/dialog\";\nimport {MatButtonModule} from \"@angular/material/button\";\nimport {DialogData} from \"../domain/dialog-data\";\n\n@Component({\n  selector: 'lib-confirmation-dialog',\n  templateUrl: './confirmation-dialog.component.html',\n  styleUrls: ['./confirmation-dialog.component.css'],\n  standalone: true,\n  imports: [\n    MatDialogModule,\n    MatButtonModule\n  ]\n})\nexport class ConformationDialogComponent implements OnInit {\n\n  data: DialogData = {};\n\n  constructor(\n    private dialogRef: MatDialogRef<any>,\n    @Inject(MAT_DIALOG_DATA) private dialogData: DialogData\n  ) {\n  }\n\n  onSecondaryClick() {\n    this.dialogRef.close('secondaryAction');\n  }\n\n  onDefaultClick() {\n    this.dialogRef.close('primaryAction');\n  }\n\n  ngOnInit(): void {\n    this.data.title = this.dialogData.title ?? \"\";\n    this.data.content = this.dialogData.content ?? \"Do you want to continue?\";\n    this.data.primaryActionBtnTitle = this.dialogData.primaryActionBtnTitle ?? \"Yes\";\n    this.data.secondaryActionBtnTitle = this.dialogData.secondaryActionBtnTitle ?? \"No\";\n    this.data.width = this.dialogData.width ?? '4em';\n    this.data.height = this.dialogData.width ?? '4em';\n    this.data.isPrimaryButtonLeft = this.dialogData.isPrimaryButtonLeft ?? false;\n  }\n}\n\nexport function openConfirmationDialog(dialog: MatDialog, dialogData?: DialogData) {\n\n  const config = new MatDialogConfig();\n\n  config.autoFocus = true;\n  config.width = dialogData?.width\n  config.height = dialogData?.height;\n\n  config.data = {\n    ...dialogData\n  }\n\n  const dialogRef = dialog.open(ConformationDialogComponent, config);\n\n  return dialogRef.afterClosed();\n}\n","<h1 mat-dialog-title>{{data.title}}</h1>\n<div mat-dialog-content>\n  <span [innerHTML]=\"data.content\"></span>\n</div>\n<div mat-dialog-actions align=\"end\">\n  @if (!data.isPrimaryButtonLeft) {\n      <button mat-stroked-button (click)=\"onSecondaryClick()\">{{data.secondaryActionBtnTitle}}</button>\n      <button mat-stroked-button color=\"primary\" (click)=\"onDefaultClick()\" cdkFocusInitial>{{data.primaryActionBtnTitle}}</button>\n  }\n  @if (data.isPrimaryButtonLeft) {\n      <button mat-stroked-button  (click)=\"onDefaultClick()\" cdkFocusInitial>{{data.primaryActionBtnTitle}}</button>\n      <button mat-stroked-button (click)=\"onSecondaryClick()\">{{data.secondaryActionBtnTitle}}</button>\n  }\n</div>\n","import {AfterViewInit, Component, ElementRef, Inject, OnInit, ViewChild} from '@angular/core';\n\nimport {\n  AbstractControl,\n  ReactiveFormsModule,\n  UntypedFormControl,\n  UntypedFormGroup,\n  ValidationErrors\n} from \"@angular/forms\";\nimport {MatDialogModule, MatDialogRef, MAT_DIALOG_DATA, MatDialogConfig, MatDialog} from \"@angular/material/dialog\";\nimport {MatButtonModule} from \"@angular/material/button\";\nimport {MatFormFieldModule} from \"@angular/material/form-field\";\nimport {MatInputModule} from \"@angular/material/input\";\nimport {TextInputDialogData} from \"../domain/text-input-dialog-data\";\n\n@Component({\n    selector: 'lib-text-input-dialog',\n    imports: [\n        MatButtonModule,\n        ReactiveFormsModule,\n        MatFormFieldModule,\n        MatDialogModule,\n        MatInputModule\n    ],\n    templateUrl: './text-input-dialog.component.html',\n    styleUrls: ['./text-input-dialog.component.css'],\n    standalone: true\n})\n\nexport class TextInputDialogComponent implements OnInit, AfterViewInit {\n  @ViewChild('textareaElement') textareaElement: ElementRef | undefined;\n  minNumberOfRows = 20;\n\n  ngAfterViewInit() {\n    if (this.textareaElement) {\n      this.autoResizeTextarea(this.textareaElement.nativeElement);\n    }\n  }\n\n  data:  TextInputDialogData= {};\n  dialogForm = new UntypedFormGroup({\n    content: new UntypedFormControl(null)\n  });\n  numRows: number=10;\n\n  constructor(\n    private dialogRef: MatDialogRef<any>,\n    @Inject(MAT_DIALOG_DATA) private dialogData: any\n  ) { }\n\n  onCancel() {\n    this.dialogRef.close();\n    this.dialogForm.reset();\n  }\n\n  onSave() {\n    this.dialogRef.close(this.dialogForm.controls['content'].value);\n    this.dialogForm.reset();\n  }\n\n  ngOnInit(): void {\n\n    this.data.title = this.dialogData.title ?? \"\";\n    this.data.content = this.dialogData.content ?? \"Do you want to continue?\";\n    this.data.primaryActionBtnTitle = this.dialogData.primaryActionBtnTitle ?? \"Yes\";\n    this.data.secondaryActionBtnTitle = this.dialogData.secondaryActionBtnTitle ?? \"No\";\n    this.data.width = this.dialogData.width ?? '4em';\n    this.data.height = this.dialogData.width ?? '4em';\n    this.data.isPrimaryButtonLeft = this.dialogData.isPrimaryButtonLeft ?? false;\n    this.data.inputLabelText = this.dialogData.inputLabelText ?? 'Paste or enter content here';\n\n    if(this.dialogData.content){\n      this.dialogForm.controls['content'].patchValue(this.dialogData.content);\n    }\n\n    if(this.dialogData.formValidators){\n      // Inject the validators\n      this.dialogForm.controls['content'].setValidators(this.dialogData.formValidators);\n      this.dialogForm.controls['content'].updateValueAndValidity();\n      this.data.formValidationTypes = this.dialogData.formValidationTypes\n    }\n\n  }\n\n  onSubmit() {\n    if(this.dialogForm.valid){\n      this.onSave();\n      this.data.validatorErrors = '';\n    }\n    else {\n      this.data.validatorErrors = this.getValidationErrors(this.dialogForm.controls['content'].errors, this.data.formValidationTypes);\n    }\n  }\n\n  getValidationErrors(errors: ValidationErrors | null, errorTypes: any[] | undefined): string {\n    if(!errors || !errorTypes){\n      console.error(\"No errors or error type parameters present.\");\n      return '';\n    }\n    const errorName = Object.keys(errors)[0];\n    const result = errorTypes.find(element => element.name === errorName)?.display;\n    if(result) {\n      return result;\n    }\n    else if(errorName){\n      console.error(\"Unable to find error with name \" + errorName);\n      return \"Validation Error Produced\";\n    }\n    else {\n      console.log(\"The validation did not produce any errors\")\n      return '';\n    }\n  }\n\n  autoResizeTextarea(textarea: HTMLTextAreaElement): void {\n    textarea.style.height = 'auto';\n    let lineHeight = parseInt(getComputedStyle(textarea).lineHeight);\n    let rows = Math.ceil(textarea.scrollHeight / lineHeight);\n    if(rows < this.minNumberOfRows){\n      textarea.rows = this.minNumberOfRows;\n    }\n    else{\n      textarea.rows = rows;\n    }\n\n  }\n}\n\nexport function openTextInputDialog(dialog: MatDialog, dialogData?: TextInputDialogData) {\n\n  const config = new MatDialogConfig();\n\n  config.autoFocus = true;\n  config.width = dialogData?.width ?? \"80%\";\n\n  config.data = {\n    ...dialogData\n  }\n\n  const dialogRef = dialog.open(TextInputDialogComponent, config);\n\n  return dialogRef.afterClosed();\n}\n\nexport function JsonValidator(control: AbstractControl) {\n  if (control.value == null) {\n    return null;\n  }\n  let hasErrors = false;\n  try {\n    JSON.parse(control.value.trim());\n  } catch (e) {\n    hasErrors = true;\n  }\n  if (hasErrors) {\n    return {jsonValidator: true};\n  }\n  return null\n}\n\nexport function ResourceTypeValidator(control: AbstractControl) {\n  if (control.value == null) {\n    return null;\n  }\n\n  let hasErrors = false;\n  let json = null;\n  try {\n    json = JSON.parse(control.value.trim());\n  } catch (e) {\n    hasErrors = true;\n  }\n\n  if (!json?.resourceType) {\n    hasErrors = true;\n  }\n\n  if (hasErrors) {\n    return {resourceTypeValidator: true};\n  }\n  return null\n}\n","\n<h1 mat-dialog-title>{{data.title}}</h1>\n<form [formGroup]=\"dialogForm\" (ngSubmit)=\"onSubmit()\">\n  <div mat-dialog-content>\n    <mat-form-field appearance=\"outline\" style=\"width: 100%\">\n      <mat-label>{{data.inputLabelText}}</mat-label>\n      <textarea type=\"text\" matInput formControlName=\"content\"\n                #textareaElement\n                (input)=\"autoResizeTextarea(textareaElement)\"></textarea>\n      <mat-error>\n        {{ data.validatorErrors }}\n      </mat-error>\n    </mat-form-field>\n  </div>\n  <div mat-dialog-actions align=\"end\">\n    <button type=\"button\" mat-stroked-button (click)=\"onCancel()\" cdkFocusInitial>{{data.secondaryActionBtnTitle}}</button>\n    <button mat-stroked-button type=\"submit\" color=\"primary\" >{{data.primaryActionBtnTitle}}</button>\n  </div>\n</form>\n\n","import {Component, EventEmitter, Input, Output} from '@angular/core';\nimport {MatButtonModule} from \"@angular/material/button\";\nimport {BrowserModule} from \"@angular/platform-browser\";\n\n@Component({\n\n  standalone: true,\n  imports: [\n    MatButtonModule,\n    BrowserModule\n  ],\n  selector: 'lib-common-error',\n  templateUrl: './common-error.component.html',\n  styleUrls: ['./common-error.component.scss'],\n})\nexport class CommonErrorComponent {\n  @Input() errorCode: string | number;\n  @Input() errorMessage: string = \"Server error. Please check the developer console for details.\";\n  @Input() buttonName: string=\"Retry\";\n  @Output() buttonClickEvent = new EventEmitter();\n\n  onBtnClick(){\n    this.buttonClickEvent.emit();\n  }\n}\n","\n<div class=\"box\">\n  @if (errorCode) {\n    <div class=\"error-code\">Error Code: {{ errorCode }}</div>\n  }\n  <div class=\"error-message\">{{ errorMessage }}</div>\n  <div class=\"action-button\">\n    <button mat-raised-button (click)=\"onBtnClick()\">{{ buttonName }}</button>\n  </div>\n</div>\n","/*\n * Public API Surface of ngx-hisb-common-ui\n */\n\nexport * from './lib/ngx-hisb-common-ui.module';\nexport * from './lib/header/header.config';\nexport * from './lib/header/header.component';\nexport * from './lib/nav-menu/option.config';\nexport * from './lib/nav-menu/nav-menu.component';\nexport * from './lib/dialog/confirmation-dialog/conformation-dialog.component';\nexport * from './lib/dialog/text-input-dialog/text-input-dialog.component';\nexport * from './lib/dialog/domain/dialog-data';\nexport * from './lib/dialog/domain/text-input-dialog-data';\nexport * from './lib/common-error/common-error.component';\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public-api';\n"],"names":["i2","i4","i5","i3","i1"],"mappings":"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"}